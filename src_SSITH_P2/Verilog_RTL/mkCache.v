//
// Generated by Bluespec Compiler, version 2019.05.beta2 (build a88bf40db, 2019-05-24)
//
//
//
//
// Ports:
// Name                         I/O  size props
// mav_request_pa                 O   130
// RDY_mav_request_pa             O     1
// mv_refill_ok                   O     1
// RDY_mv_refill_ok               O     1
// RDY_flush_server_request_put   O     1 reg
// RDY_flush_server_response_get  O     1 reg
// g_mem_req_get                  O    65 reg
// RDY_g_mem_req_get              O     1 reg
// g_write_data_get               O    64 reg
// RDY_g_write_data_get           O     1 reg
// RDY_p_mem_read_data_put        O     1 reg
// CLK                            I     1 clock
// RST_N                          I     1 reset
// ma_request_va_va               I    64
// mav_request_pa_req             I   208
// mav_request_pa_pa              I    64
// flush_server_request_put       I     1 reg
// p_mem_read_data_put            I    65 reg
// EN_ma_request_va               I     1
// EN_flush_server_request_put    I     1
// EN_flush_server_response_get   I     1
// EN_p_mem_read_data_put         I     1
// EN_mav_request_pa              I     1
// EN_g_mem_req_get               I     1
// EN_g_write_data_get            I     1
//
// Combinational paths from inputs to outputs:
//   (mav_request_pa_req, mav_request_pa_pa) -> mav_request_pa
//
//

`ifdef BSV_ASSIGNMENT_DELAY
`else
  `define BSV_ASSIGNMENT_DELAY
`endif

`ifdef BSV_POSITIVE_RESET
  `define BSV_RESET_VALUE 1'b1
  `define BSV_RESET_EDGE posedge
`else
  `define BSV_RESET_VALUE 1'b0
  `define BSV_RESET_EDGE negedge
`endif

module mkCache(CLK,
	       RST_N,

	       ma_request_va_va,
	       EN_ma_request_va,

	       mav_request_pa_req,
	       mav_request_pa_pa,
	       EN_mav_request_pa,
	       mav_request_pa,
	       RDY_mav_request_pa,

	       mv_refill_ok,
	       RDY_mv_refill_ok,

	       flush_server_request_put,
	       EN_flush_server_request_put,
	       RDY_flush_server_request_put,

	       EN_flush_server_response_get,
	       RDY_flush_server_response_get,

	       EN_g_mem_req_get,
	       g_mem_req_get,
	       RDY_g_mem_req_get,

	       EN_g_write_data_get,
	       g_write_data_get,
	       RDY_g_write_data_get,

	       p_mem_read_data_put,
	       EN_p_mem_read_data_put,
	       RDY_p_mem_read_data_put);
  parameter [2 : 0] verbosity = 3'b0;
  input  CLK;
  input  RST_N;

  // action method ma_request_va
  input  [63 : 0] ma_request_va_va;
  input  EN_ma_request_va;

  // actionvalue method mav_request_pa
  input  [207 : 0] mav_request_pa_req;
  input  [63 : 0] mav_request_pa_pa;
  input  EN_mav_request_pa;
  output [129 : 0] mav_request_pa;
  output RDY_mav_request_pa;

  // value method mv_refill_ok
  output mv_refill_ok;
  output RDY_mv_refill_ok;

  // action method flush_server_request_put
  input  flush_server_request_put;
  input  EN_flush_server_request_put;
  output RDY_flush_server_request_put;

  // action method flush_server_response_get
  input  EN_flush_server_response_get;
  output RDY_flush_server_response_get;

  // actionvalue method g_mem_req_get
  input  EN_g_mem_req_get;
  output [64 : 0] g_mem_req_get;
  output RDY_g_mem_req_get;

  // actionvalue method g_write_data_get
  input  EN_g_write_data_get;
  output [63 : 0] g_write_data_get;
  output RDY_g_write_data_get;

  // action method p_mem_read_data_put
  input  [64 : 0] p_mem_read_data_put;
  input  EN_p_mem_read_data_put;
  output RDY_p_mem_read_data_put;

  // signals for module outputs
  wire [129 : 0] mav_request_pa;
  wire [64 : 0] g_mem_req_get;
  wire [63 : 0] g_write_data_get;
  wire RDY_flush_server_request_put,
       RDY_flush_server_response_get,
       RDY_g_mem_req_get,
       RDY_g_write_data_get,
       RDY_mav_request_pa,
       RDY_mv_refill_ok,
       RDY_p_mem_read_data_put,
       mv_refill_ok;

  // register rg_cset_in_cache
  reg [5 : 0] rg_cset_in_cache;
  reg [5 : 0] rg_cset_in_cache$D_IN;
  wire rg_cset_in_cache$EN;

  // register rg_cword_in_cline
  reg [2 : 0] rg_cword_in_cline;
  wire [2 : 0] rg_cword_in_cline$D_IN;
  wire rg_cword_in_cline$EN;

  // register rg_error_during_refill
  reg rg_error_during_refill;
  wire rg_error_during_refill$D_IN, rg_error_during_refill$EN;

  // register rg_fsm_state
  reg [3 : 0] rg_fsm_state;
  reg [3 : 0] rg_fsm_state$D_IN;
  wire rg_fsm_state$EN;

  // register rg_lrsc_pa
  reg [63 : 0] rg_lrsc_pa;
  wire [63 : 0] rg_lrsc_pa$D_IN;
  wire rg_lrsc_pa$EN;

  // register rg_lrsc_size
  reg [1 : 0] rg_lrsc_size;
  wire [1 : 0] rg_lrsc_size$D_IN;
  wire rg_lrsc_size$EN;

  // register rg_lrsc_valid
  reg rg_lrsc_valid;
  wire rg_lrsc_valid$D_IN, rg_lrsc_valid$EN;

  // register rg_new_cset_meta
  reg [107 : 0] rg_new_cset_meta;
  wire [107 : 0] rg_new_cset_meta$D_IN;
  wire rg_new_cset_meta$EN;

  // register rg_new_meta_state
  reg [1 : 0] rg_new_meta_state;
  wire [1 : 0] rg_new_meta_state$D_IN;
  wire rg_new_meta_state$EN;

  // register rg_pa
  reg [63 : 0] rg_pa;
  wire [63 : 0] rg_pa$D_IN;
  wire rg_pa$EN;

  // register rg_va
  reg [63 : 0] rg_va;
  wire [63 : 0] rg_va$D_IN;
  wire rg_va$EN;

  // register rg_victim_way
  reg rg_victim_way;
  wire rg_victim_way$D_IN, rg_victim_way$EN;

  // register rg_way_in_cset
  reg rg_way_in_cset;
  reg rg_way_in_cset$D_IN;
  wire rg_way_in_cset$EN;

  // register rg_writeback_sequel
  reg [3 : 0] rg_writeback_sequel;
  wire [3 : 0] rg_writeback_sequel$D_IN;
  wire rg_writeback_sequel$EN;

  // ports of submodule f_flush_reqs
  wire f_flush_reqs$CLR,
       f_flush_reqs$DEQ,
       f_flush_reqs$D_IN,
       f_flush_reqs$D_OUT,
       f_flush_reqs$EMPTY_N,
       f_flush_reqs$ENQ,
       f_flush_reqs$FULL_N;

  // ports of submodule f_flush_rsps
  wire f_flush_rsps$CLR,
       f_flush_rsps$DEQ,
       f_flush_rsps$EMPTY_N,
       f_flush_rsps$ENQ,
       f_flush_rsps$FULL_N;

  // ports of submodule f_line_reqs
  reg [64 : 0] f_line_reqs$D_IN;
  wire [64 : 0] f_line_reqs$D_OUT;
  wire f_line_reqs$CLR,
       f_line_reqs$DEQ,
       f_line_reqs$EMPTY_N,
       f_line_reqs$ENQ,
       f_line_reqs$FULL_N;

  // ports of submodule f_read_data
  wire [64 : 0] f_read_data$D_IN, f_read_data$D_OUT;
  wire f_read_data$CLR,
       f_read_data$DEQ,
       f_read_data$EMPTY_N,
       f_read_data$ENQ,
       f_read_data$FULL_N;

  // ports of submodule f_write_data
  wire [63 : 0] f_write_data$D_IN, f_write_data$D_OUT;
  wire f_write_data$CLR,
       f_write_data$DEQ,
       f_write_data$EMPTY_N,
       f_write_data$ENQ,
       f_write_data$FULL_N;

  // ports of submodule ram_cset_cword
  reg [127 : 0] ram_cset_cword$DIA;
  reg [8 : 0] ram_cset_cword$ADDRA;
  wire [127 : 0] ram_cset_cword$DIB, ram_cset_cword$DOA;
  wire [8 : 0] ram_cset_cword$ADDRB;
  wire ram_cset_cword$ENA,
       ram_cset_cword$ENB,
       ram_cset_cword$WEA,
       ram_cset_cword$WEB;

  // ports of submodule ram_cset_meta
  reg [107 : 0] ram_cset_meta$DIA, ram_cset_meta$DIB;
  reg [5 : 0] ram_cset_meta$ADDRA;
  wire [107 : 0] ram_cset_meta$DOA;
  wire [5 : 0] ram_cset_meta$ADDRB;
  wire ram_cset_meta$ENA,
       ram_cset_meta$ENB,
       ram_cset_meta$WEA,
       ram_cset_meta$WEB;

  // rule scheduling signals
  wire CAN_FIRE_RL_rl_flush_loop,
       CAN_FIRE_RL_rl_flush_loop_writeback_sequel,
       CAN_FIRE_RL_rl_flush_start,
       CAN_FIRE_RL_rl_initialize,
       CAN_FIRE_RL_rl_refill_loop,
       CAN_FIRE_RL_rl_refill_loop_final,
       CAN_FIRE_RL_rl_refill_start,
       CAN_FIRE_RL_rl_replace,
       CAN_FIRE_RL_rl_writeback_loop,
       CAN_FIRE_flush_server_request_put,
       CAN_FIRE_flush_server_response_get,
       CAN_FIRE_g_mem_req_get,
       CAN_FIRE_g_write_data_get,
       CAN_FIRE_ma_request_va,
       CAN_FIRE_mav_request_pa,
       CAN_FIRE_p_mem_read_data_put,
       WILL_FIRE_RL_rl_flush_loop,
       WILL_FIRE_RL_rl_flush_loop_writeback_sequel,
       WILL_FIRE_RL_rl_flush_start,
       WILL_FIRE_RL_rl_initialize,
       WILL_FIRE_RL_rl_refill_loop,
       WILL_FIRE_RL_rl_refill_loop_final,
       WILL_FIRE_RL_rl_refill_start,
       WILL_FIRE_RL_rl_replace,
       WILL_FIRE_RL_rl_writeback_loop,
       WILL_FIRE_flush_server_request_put,
       WILL_FIRE_flush_server_response_get,
       WILL_FIRE_g_mem_req_get,
       WILL_FIRE_g_write_data_get,
       WILL_FIRE_ma_request_va,
       WILL_FIRE_mav_request_pa,
       WILL_FIRE_p_mem_read_data_put;

  // inputs to muxes for submodule ports
  wire [127 : 0] MUX_ram_cset_cword$b_put_3__VAL_1,
		 MUX_ram_cset_cword$b_put_3__VAL_2;
  wire [107 : 0] MUX_ram_cset_meta$b_put_3__VAL_2,
		 MUX_ram_cset_meta$b_put_3__VAL_3,
		 MUX_ram_cset_meta$b_put_3__VAL_4,
		 MUX_ram_cset_meta$b_put_3__VAL_5;
  wire [64 : 0] MUX_f_line_reqs$enq_1__VAL_1,
		MUX_f_line_reqs$enq_1__VAL_2,
		MUX_f_line_reqs$enq_1__VAL_3;
  wire [8 : 0] MUX_ram_cset_cword$a_put_2__VAL_1,
	       MUX_ram_cset_cword$a_put_2__VAL_2,
	       MUX_ram_cset_cword$a_put_2__VAL_5,
	       MUX_ram_cset_cword$b_put_2__VAL_1;
  wire [5 : 0] MUX_ram_cset_meta$a_put_2__VAL_1;
  wire [3 : 0] MUX_rg_fsm_state$write_1__VAL_2,
	       MUX_rg_fsm_state$write_1__VAL_5,
	       MUX_rg_fsm_state$write_1__VAL_6,
	       MUX_rg_fsm_state$write_1__VAL_7;
  wire MUX_f_line_reqs$enq_1__SEL_1,
       MUX_f_line_reqs$enq_1__SEL_2,
       MUX_ram_cset_cword$a_put_1__SEL_1,
       MUX_ram_cset_cword$a_put_1__SEL_4,
       MUX_ram_cset_cword$a_put_1__SEL_5,
       MUX_ram_cset_cword$b_put_1__SEL_1,
       MUX_ram_cset_cword$b_put_1__SEL_2,
       MUX_ram_cset_meta$a_put_1__SEL_1,
       MUX_ram_cset_meta$a_put_1__SEL_2,
       MUX_ram_cset_meta$a_put_1__SEL_3,
       MUX_ram_cset_meta$b_put_1__SEL_2,
       MUX_ram_cset_meta$b_put_1__SEL_3,
       MUX_rg_cset_in_cache$write_1__SEL_1,
       MUX_rg_cword_in_cline$write_1__PSEL_1,
       MUX_rg_cword_in_cline$write_1__SEL_1,
       MUX_rg_error_during_refill$write_1__VAL_1,
       MUX_rg_fsm_state$write_1__SEL_1,
       MUX_rg_fsm_state$write_1__SEL_2,
       MUX_rg_fsm_state$write_1__SEL_3,
       MUX_rg_fsm_state$write_1__SEL_4,
       MUX_rg_fsm_state$write_1__SEL_5,
       MUX_rg_way_in_cset$write_1__SEL_1,
       MUX_rg_way_in_cset$write_1__SEL_2,
       MUX_rg_way_in_cset$write_1__VAL_1;

  // declarations used by system tasks
  // synopsys translate_off
  reg [31 : 0] v__h12039;
  reg [31 : 0] v__h12492;
  reg [31 : 0] v__h12770;
  reg [31 : 0] v__h25960;
  reg [31 : 0] v__h28327;
  reg [31 : 0] v__h28571;
  reg [31 : 0] v__h30841;
  reg [31 : 0] v__h30987;
  reg [31 : 0] v__h11768;
  reg [31 : 0] v__h1252;
  reg [31 : 0] v__h1620;
  reg [31 : 0] v__h1766;
  reg [31 : 0] v__h2815;
  reg [31 : 0] v__h3631;
  reg [31 : 0] v__h4246;
  reg [31 : 0] v__h5655;
  reg [31 : 0] v__h6637;
  reg [31 : 0] v__h7160;
  reg [31 : 0] v__h8135;
  reg [31 : 0] v__h9131;
  reg [31 : 0] v__h10431;
  reg [31 : 0] v__h10501;
  reg [31 : 0] v__h10863;
  reg [31 : 0] v__h10963;
  reg [31 : 0] v__h1246;
  reg [31 : 0] v__h1614;
  reg [31 : 0] v__h1760;
  reg [31 : 0] v__h2809;
  reg [31 : 0] v__h3625;
  reg [31 : 0] v__h4240;
  reg [31 : 0] v__h5649;
  reg [31 : 0] v__h6631;
  reg [31 : 0] v__h7154;
  reg [31 : 0] v__h8129;
  reg [31 : 0] v__h9125;
  reg [31 : 0] v__h10425;
  reg [31 : 0] v__h10495;
  reg [31 : 0] v__h10857;
  reg [31 : 0] v__h10957;
  reg [31 : 0] v__h11762;
  reg [31 : 0] v__h12033;
  reg [31 : 0] v__h12486;
  reg [31 : 0] v__h12764;
  reg [31 : 0] v__h25954;
  reg [31 : 0] v__h28321;
  reg [31 : 0] v__h28565;
  reg [31 : 0] v__h30835;
  reg [31 : 0] v__h30981;
  // synopsys translate_on

  // remaining internal signals
  reg [63 : 0] CASE_mav_request_pa_pa_BITS_2_TO_0_0x0_old_cwo_ETC__q4,
	       CASE_mav_request_pa_pa_BITS_2_TO_0_0x0_old_cwo_ETC__q7,
	       IF_mav_request_pa_pa_BITS_2_TO_0_61_EQ_0x0_62__ETC___d501,
	       IF_mav_request_pa_pa_BITS_2_TO_0_61_EQ_0x0_62__ETC___d511,
	       IF_mav_request_pa_pa_BITS_2_TO_0_61_EQ_0x0_62__ETC___d585,
	       IF_mav_request_pa_pa_BITS_2_TO_0_61_EQ_0x0_62__ETC___d594,
	       _theResult_____2__h31340,
	       cword__h1021,
	       mask__h31270,
	       n__h26557,
	       n__h32100,
	       old_cword__h26546,
	       x__h33879,
	       y__h25821;
  reg [51 : 0] CASE_rg_way_in_cset_0_ram_cset_metaDOA_BITS_5_ETC__q2,
	       CASE_victim_way818_0_ram_cset_metaDOA_BITS_51_ETC__q1,
	       new_meta_ctag__h7436;
  reg [1 : 0] CASE_mav_request_pa_req_BITS_207_TO_206_0_1_1__ETC__q8,
	      CASE_victim_way818_0_ram_cset_metaDOA_BITS_53_ETC__q9,
	      SEL_ARR_IF_rg_way_in_cset_THEN_rg_new_cset_met_ETC___d179;
  reg CASE_mav_request_pa_req_BITS_204_TO_203_0b0_da_ETC__q3;
  wire [63 : 0] IF_NOT_ram_cset_meta_a_read__2_BITS_107_TO_106_ETC___d524,
		IF_NOT_ram_cset_meta_a_read__2_BITS_107_TO_106_ETC___d604,
		IF_mav_request_pa_req_BITS_204_TO_203_47_EQ_0b_ETC___d533,
		IF_mav_request_pa_req_BITS_204_TO_203_47_EQ_0b_ETC___d535,
		IF_ram_cset_meta_a_read__2_BITS_107_TO_106_4_E_ETC___d525,
		IF_ram_cset_meta_a_read__2_BITS_107_TO_106_4_E_ETC___d605,
		data1__h12889,
		data__h11844,
		data__h11845,
		final_st_val__h31344,
		final_st_val__h31434,
		final_st_val__h31512,
		final_st_val__h31516,
		final_st_val__h31520,
		final_st_val__h31524,
		final_st_val__h31529,
		final_st_val__h31535,
		final_st_val__h31540,
		hit_miss_info_data__h11861,
		new_st_val__h31190,
		result__h25809,
		result__h25881,
		w1___1__h31403,
		w1__h31333,
		w2___1__h31404,
		w2__h31335,
		wb_cline_pa__h2348,
		wb_cline_pa__h8360,
		x1_avValue_final_ld_val__h30909,
		x1_avValue_final_ld_val__h33813,
		x1_avValue_final_ld_val__h33824,
		x1_avValue_final_st_val__h30910,
		x1_avValue_final_st_val__h33825,
		x__h12901,
		x__h33888,
		x_addr__h3142,
		y__h12902,
		y__h12916,
		y__h19231;
  wire [51 : 0] ctag__h7443, ctag__h7489;
  wire [31 : 0] data1844_BITS_31_TO_0__q5,
		mav_request_pa_req_BITS_106_TO_75__q6;
  wire [8 : 0] cset_cword_in_cache__h8467, next_cset_cword_in_cache__h4206;
  wire [5 : 0] next_cset_in_cache__h9034, shamt__h31224;
  wire [2 : 0] cword_in_cline__h1314;
  wire [1 : 0] IF_mav_request_pa_req_BITS_207_TO_206_12_EQ_2__ETC___d715,
	       IF_ram_cset_meta_a_read__2_BITS_53_TO_52_3_EQ__ETC___d719,
	       IF_rg_way_in_cset_THEN_IF_rg_way_in_cset_THEN__ETC___d224,
	       IF_rg_way_in_cset_THEN_rg_new_cset_meta_73_BIT_ETC___d175,
	       IF_rg_way_in_cset_THEN_rg_new_cset_meta_73_BIT_ETC___d177,
	       IF_rg_way_in_cset_THEN_rg_new_meta_state_92_EL_ETC___d235,
	       tmp__h2046,
	       tmp__h2047;
  wire IF_SEL_ARR_IF_rg_way_in_cset_THEN_rg_new_cset__ETC___d187,
       NOT_SEL_ARR_IF_rg_way_in_cset_THEN_rg_new_cset_ETC___d270,
       NOT_ram_cset_meta_a_read__2_BITS_53_TO_52_3_EQ_ETC___d342,
       NOT_ram_cset_meta_a_read__2_BITS_53_TO_52_3_EQ_ETC___d456,
       NOT_ram_cset_meta_a_read__2_BITS_53_TO_52_3_EQ_ETC___d621,
       NOT_ram_cset_meta_a_read__2_BITS_53_TO_52_3_EQ_ETC___d623,
       NOT_ram_cset_meta_a_read__2_BITS_53_TO_52_3_EQ_ETC___d627,
       NOT_ram_cset_meta_a_read__2_BITS_53_TO_52_3_EQ_ETC___d630,
       NOT_ram_cset_meta_a_read__2_BITS_53_TO_52_3_EQ_ETC___d633,
       NOT_ram_cset_meta_a_read__2_BITS_53_TO_52_3_EQ_ETC___d641,
       NOT_ram_cset_meta_a_read__2_BITS_53_TO_52_3_EQ_ETC___d648,
       NOT_ram_cset_meta_a_read__2_BITS_53_TO_52_3_EQ_ETC___d655,
       NOT_ram_cset_meta_a_read__2_BITS_53_TO_52_3_EQ_ETC___d660,
       NOT_ram_cset_meta_a_read__2_BITS_53_TO_52_3_EQ_ETC___d664,
       NOT_ram_cset_meta_a_read__2_BITS_53_TO_52_3_EQ_ETC___d668,
       NOT_ram_cset_meta_a_read__2_BITS_53_TO_52_3_EQ_ETC___d672,
       NOT_ram_cset_meta_a_read__2_BITS_53_TO_52_3_EQ_ETC___d676,
       NOT_ram_cset_meta_a_read__2_BITS_53_TO_52_3_EQ_ETC___d680,
       NOT_ram_cset_meta_a_read__2_BITS_53_TO_52_3_EQ_ETC___d684,
       NOT_ram_cset_meta_a_read__2_BITS_53_TO_52_3_EQ_ETC___d688,
       NOT_ram_cset_meta_a_read__2_BITS_53_TO_52_3_EQ_ETC___d692,
       NOT_ram_cset_meta_a_read__2_BITS_53_TO_52_3_EQ_ETC___d713,
       NOT_verbosity_ULT_2_6___d17,
       mav_request_pa_req_BITS_207_TO_206_12_EQ_1_15__ETC___d619,
       ram_cset_meta_a_read__2_BITS_105_TO_54_01_EQ_m_ETC___d307,
       ram_cset_meta_a_read__2_BITS_51_TO_0_00_EQ_mav_ETC___d305,
       ram_cset_meta_a_read__2_BITS_53_TO_52_3_EQ_0_8_ETC___d337,
       rg_cword_in_cline_3_EQ_7_2_AND_NOT_verbosity_E_ETC___d67,
       rg_lrsc_pa_46_EQ_mav_request_pa_pa___d447,
       victim_way__h1818,
       x__h9039;

  // action method ma_request_va
  assign CAN_FIRE_ma_request_va = 1'd1 ;
  assign WILL_FIRE_ma_request_va = EN_ma_request_va ;

  // actionvalue method mav_request_pa
  assign mav_request_pa =
	     { IF_ram_cset_meta_a_read__2_BITS_53_TO_52_3_EQ__ETC___d719,
	       x__h33879,
	       x__h33888 } ;
  assign RDY_mav_request_pa = rg_fsm_state == 4'd1 && !f_flush_reqs$EMPTY_N ;
  assign CAN_FIRE_mav_request_pa =
	     rg_fsm_state == 4'd1 && !f_flush_reqs$EMPTY_N ;
  assign WILL_FIRE_mav_request_pa = EN_mav_request_pa ;

  // value method mv_refill_ok
  assign mv_refill_ok = !rg_error_during_refill ;
  assign RDY_mv_refill_ok = rg_fsm_state == 4'd1 ;

  // action method flush_server_request_put
  assign RDY_flush_server_request_put = f_flush_reqs$FULL_N ;
  assign CAN_FIRE_flush_server_request_put = f_flush_reqs$FULL_N ;
  assign WILL_FIRE_flush_server_request_put = EN_flush_server_request_put ;

  // action method flush_server_response_get
  assign RDY_flush_server_response_get = f_flush_rsps$EMPTY_N ;
  assign CAN_FIRE_flush_server_response_get = f_flush_rsps$EMPTY_N ;
  assign WILL_FIRE_flush_server_response_get = EN_flush_server_response_get ;

  // actionvalue method g_mem_req_get
  assign g_mem_req_get = f_line_reqs$D_OUT ;
  assign RDY_g_mem_req_get = f_line_reqs$EMPTY_N ;
  assign CAN_FIRE_g_mem_req_get = f_line_reqs$EMPTY_N ;
  assign WILL_FIRE_g_mem_req_get = EN_g_mem_req_get ;

  // actionvalue method g_write_data_get
  assign g_write_data_get = f_write_data$D_OUT ;
  assign RDY_g_write_data_get = f_write_data$EMPTY_N ;
  assign CAN_FIRE_g_write_data_get = f_write_data$EMPTY_N ;
  assign WILL_FIRE_g_write_data_get = EN_g_write_data_get ;

  // action method p_mem_read_data_put
  assign RDY_p_mem_read_data_put = f_read_data$FULL_N ;
  assign CAN_FIRE_p_mem_read_data_put = f_read_data$FULL_N ;
  assign WILL_FIRE_p_mem_read_data_put = EN_p_mem_read_data_put ;

  // submodule f_flush_reqs
  FIFO2 #(.width(32'd1), .guarded(32'd1)) f_flush_reqs(.RST(RST_N),
						       .CLK(CLK),
						       .D_IN(f_flush_reqs$D_IN),
						       .ENQ(f_flush_reqs$ENQ),
						       .DEQ(f_flush_reqs$DEQ),
						       .CLR(f_flush_reqs$CLR),
						       .D_OUT(f_flush_reqs$D_OUT),
						       .FULL_N(f_flush_reqs$FULL_N),
						       .EMPTY_N(f_flush_reqs$EMPTY_N));

  // submodule f_flush_rsps
  FIFO20 #(.guarded(32'd1)) f_flush_rsps(.RST(RST_N),
					 .CLK(CLK),
					 .ENQ(f_flush_rsps$ENQ),
					 .DEQ(f_flush_rsps$DEQ),
					 .CLR(f_flush_rsps$CLR),
					 .FULL_N(f_flush_rsps$FULL_N),
					 .EMPTY_N(f_flush_rsps$EMPTY_N));

  // submodule f_line_reqs
  FIFO2 #(.width(32'd65), .guarded(32'd1)) f_line_reqs(.RST(RST_N),
						       .CLK(CLK),
						       .D_IN(f_line_reqs$D_IN),
						       .ENQ(f_line_reqs$ENQ),
						       .DEQ(f_line_reqs$DEQ),
						       .CLR(f_line_reqs$CLR),
						       .D_OUT(f_line_reqs$D_OUT),
						       .FULL_N(f_line_reqs$FULL_N),
						       .EMPTY_N(f_line_reqs$EMPTY_N));

  // submodule f_read_data
  FIFO2 #(.width(32'd65), .guarded(32'd1)) f_read_data(.RST(RST_N),
						       .CLK(CLK),
						       .D_IN(f_read_data$D_IN),
						       .ENQ(f_read_data$ENQ),
						       .DEQ(f_read_data$DEQ),
						       .CLR(f_read_data$CLR),
						       .D_OUT(f_read_data$D_OUT),
						       .FULL_N(f_read_data$FULL_N),
						       .EMPTY_N(f_read_data$EMPTY_N));

  // submodule f_write_data
  FIFO2 #(.width(32'd64), .guarded(32'd1)) f_write_data(.RST(RST_N),
							.CLK(CLK),
							.D_IN(f_write_data$D_IN),
							.ENQ(f_write_data$ENQ),
							.DEQ(f_write_data$DEQ),
							.CLR(f_write_data$CLR),
							.D_OUT(f_write_data$D_OUT),
							.FULL_N(f_write_data$FULL_N),
							.EMPTY_N(f_write_data$EMPTY_N));

  // submodule ram_cset_cword
  BRAM2 #(.PIPELINED(1'd0),
	  .ADDR_WIDTH(32'd9),
	  .DATA_WIDTH(32'd128),
	  .MEMSIZE(10'd512)) ram_cset_cword(.CLKA(CLK),
					    .CLKB(CLK),
					    .ADDRA(ram_cset_cword$ADDRA),
					    .ADDRB(ram_cset_cword$ADDRB),
					    .DIA(ram_cset_cword$DIA),
					    .DIB(ram_cset_cword$DIB),
					    .WEA(ram_cset_cword$WEA),
					    .WEB(ram_cset_cword$WEB),
					    .ENA(ram_cset_cword$ENA),
					    .ENB(ram_cset_cword$ENB),
					    .DOA(ram_cset_cword$DOA),
					    .DOB());

  // submodule ram_cset_meta
  BRAM2 #(.PIPELINED(1'd0),
	  .ADDR_WIDTH(32'd6),
	  .DATA_WIDTH(32'd108),
	  .MEMSIZE(7'd64)) ram_cset_meta(.CLKA(CLK),
					 .CLKB(CLK),
					 .ADDRA(ram_cset_meta$ADDRA),
					 .ADDRB(ram_cset_meta$ADDRB),
					 .DIA(ram_cset_meta$DIA),
					 .DIB(ram_cset_meta$DIB),
					 .WEA(ram_cset_meta$WEA),
					 .WEB(ram_cset_meta$WEB),
					 .ENA(ram_cset_meta$ENA),
					 .ENB(ram_cset_meta$ENB),
					 .DOA(ram_cset_meta$DOA),
					 .DOB());

  // rule RL_rl_writeback_loop
  assign CAN_FIRE_RL_rl_writeback_loop =
	     f_write_data$FULL_N && rg_fsm_state == 4'd3 ;
  assign WILL_FIRE_RL_rl_writeback_loop =
	     CAN_FIRE_RL_rl_writeback_loop && !EN_ma_request_va ;

  // rule RL_rl_replace
  assign CAN_FIRE_RL_rl_replace =
	     (CASE_victim_way818_0_ram_cset_metaDOA_BITS_53_ETC__q9 != 2'd2 ||
	      f_line_reqs$FULL_N) &&
	     rg_fsm_state == 4'd2 ;
  assign WILL_FIRE_RL_rl_replace =
	     CAN_FIRE_RL_rl_replace && !EN_ma_request_va ;

  // rule RL_rl_refill_start
  assign CAN_FIRE_RL_rl_refill_start =
	     f_line_reqs$FULL_N && rg_fsm_state == 4'd4 ;
  assign WILL_FIRE_RL_rl_refill_start =
	     CAN_FIRE_RL_rl_refill_start && !EN_ma_request_va ;

  // rule RL_rl_refill_loop
  assign CAN_FIRE_RL_rl_refill_loop =
	     f_read_data$EMPTY_N && rg_fsm_state == 4'd5 ;
  assign WILL_FIRE_RL_rl_refill_loop =
	     CAN_FIRE_RL_rl_refill_loop && !EN_ma_request_va ;

  // rule RL_rl_refill_loop_final
  assign CAN_FIRE_RL_rl_refill_loop_final = rg_fsm_state == 4'd6 ;
  assign WILL_FIRE_RL_rl_refill_loop_final =
	     CAN_FIRE_RL_rl_refill_loop_final && !EN_ma_request_va ;

  // rule RL_rl_flush_start
  assign CAN_FIRE_RL_rl_flush_start =
	     f_flush_reqs$EMPTY_N && rg_fsm_state == 4'd1 ;
  assign WILL_FIRE_RL_rl_flush_start =
	     CAN_FIRE_RL_rl_flush_start && !EN_ma_request_va ;

  // rule RL_rl_flush_loop
  assign CAN_FIRE_RL_rl_flush_loop =
	     IF_SEL_ARR_IF_rg_way_in_cset_THEN_rg_new_cset__ETC___d187 &&
	     rg_fsm_state == 4'd7 ;
  assign WILL_FIRE_RL_rl_flush_loop =
	     CAN_FIRE_RL_rl_flush_loop && !EN_ma_request_va ;

  // rule RL_rl_flush_loop_writeback_sequel
  assign CAN_FIRE_RL_rl_flush_loop_writeback_sequel =
	     (rg_cset_in_cache != 6'd63 || !rg_way_in_cset ||
	      f_flush_rsps$FULL_N) &&
	     rg_fsm_state == 4'd8 ;
  assign WILL_FIRE_RL_rl_flush_loop_writeback_sequel =
	     CAN_FIRE_RL_rl_flush_loop_writeback_sequel && !EN_ma_request_va ;

  // rule RL_rl_initialize
  assign CAN_FIRE_RL_rl_initialize = rg_fsm_state == 4'd0 ;
  assign WILL_FIRE_RL_rl_initialize =
	     CAN_FIRE_RL_rl_initialize && !EN_ma_request_va ;

  // inputs to muxes for submodule ports
  assign MUX_f_line_reqs$enq_1__SEL_1 =
	     WILL_FIRE_RL_rl_replace &&
	     CASE_victim_way818_0_ram_cset_metaDOA_BITS_53_ETC__q9 == 2'd2 ;
  assign MUX_f_line_reqs$enq_1__SEL_2 =
	     WILL_FIRE_RL_rl_flush_loop &&
	     SEL_ARR_IF_rg_way_in_cset_THEN_rg_new_cset_met_ETC___d179 ==
	     2'd2 ;
  assign MUX_ram_cset_cword$a_put_1__SEL_1 =
	     WILL_FIRE_RL_rl_writeback_loop && rg_cword_in_cline != 3'd7 ;
  assign MUX_ram_cset_cword$a_put_1__SEL_4 =
	     WILL_FIRE_RL_rl_flush_loop_writeback_sequel &&
	     rg_cset_in_cache == 6'd63 &&
	     rg_way_in_cset ;
  assign MUX_ram_cset_cword$a_put_1__SEL_5 =
	     WILL_FIRE_RL_rl_refill_loop &&
	     (rg_va[5:3] != 3'd7 || rg_cword_in_cline != 3'd7) ;
  assign MUX_ram_cset_cword$b_put_1__SEL_1 =
	     WILL_FIRE_RL_rl_refill_loop && f_read_data$D_OUT[64] &&
	     !rg_error_during_refill ;
  assign MUX_ram_cset_cword$b_put_1__SEL_2 =
	     EN_mav_request_pa &&
	     NOT_ram_cset_meta_a_read__2_BITS_53_TO_52_3_EQ_ETC___d456 ;
  assign MUX_ram_cset_meta$a_put_1__SEL_1 =
	     WILL_FIRE_RL_rl_flush_loop_writeback_sequel && rg_way_in_cset ;
  assign MUX_ram_cset_meta$a_put_1__SEL_2 =
	     WILL_FIRE_RL_rl_refill_loop && rg_cword_in_cline == 3'd7 &&
	     rg_va[5:3] != 3'd7 ;
  assign MUX_ram_cset_meta$a_put_1__SEL_3 =
	     WILL_FIRE_RL_rl_flush_loop &&
	     SEL_ARR_IF_rg_way_in_cset_THEN_rg_new_cset_met_ETC___d179 !=
	     2'd2 &&
	     rg_cset_in_cache != 6'd63 &&
	     rg_way_in_cset ;
  assign MUX_ram_cset_meta$b_put_1__SEL_2 =
	     WILL_FIRE_RL_rl_refill_loop && rg_cword_in_cline == 3'd7 &&
	     (!f_read_data$D_OUT[64] || rg_error_during_refill) ;
  assign MUX_ram_cset_meta$b_put_1__SEL_3 =
	     WILL_FIRE_RL_rl_flush_loop &&
	     SEL_ARR_IF_rg_way_in_cset_THEN_rg_new_cset_met_ETC___d179 !=
	     2'd2 &&
	     rg_way_in_cset ;
  assign MUX_rg_cset_in_cache$write_1__SEL_1 =
	     WILL_FIRE_RL_rl_flush_loop_writeback_sequel &&
	     rg_cset_in_cache != 6'd63 &&
	     rg_way_in_cset ;
  assign MUX_rg_cword_in_cline$write_1__PSEL_1 =
	     WILL_FIRE_RL_rl_refill_loop || WILL_FIRE_RL_rl_writeback_loop ;
  assign MUX_rg_cword_in_cline$write_1__SEL_1 =
	     MUX_rg_cword_in_cline$write_1__PSEL_1 &&
	     rg_cword_in_cline != 3'd7 ;
  assign MUX_rg_fsm_state$write_1__SEL_1 =
	     WILL_FIRE_RL_rl_writeback_loop && rg_cword_in_cline == 3'd7 ;
  assign MUX_rg_fsm_state$write_1__SEL_2 =
	     WILL_FIRE_RL_rl_refill_loop && rg_cword_in_cline == 3'd7 ;
  assign MUX_rg_fsm_state$write_1__SEL_3 =
	     WILL_FIRE_RL_rl_initialize && rg_cset_in_cache == 6'd63 ;
  assign MUX_rg_fsm_state$write_1__SEL_4 =
	     EN_mav_request_pa &&
	     (ram_cset_meta$DOA[53:52] == 2'd0 ||
	      !ram_cset_meta_a_read__2_BITS_51_TO_0_00_EQ_mav_ETC___d305) &&
	     (ram_cset_meta$DOA[107:106] == 2'd0 ||
	      !ram_cset_meta_a_read__2_BITS_105_TO_54_01_EQ_m_ETC___d307) ;
  assign MUX_rg_fsm_state$write_1__SEL_5 =
	     WILL_FIRE_RL_rl_flush_loop &&
	     (SEL_ARR_IF_rg_way_in_cset_THEN_rg_new_cset_met_ETC___d179 ==
	      2'd2 ||
	      rg_cset_in_cache == 6'd63 && rg_way_in_cset) ;
  assign MUX_rg_way_in_cset$write_1__SEL_1 =
	     WILL_FIRE_RL_rl_flush_loop_writeback_sequel &&
	     (rg_cset_in_cache != 6'd63 || !rg_way_in_cset) ;
  assign MUX_rg_way_in_cset$write_1__SEL_2 =
	     WILL_FIRE_RL_rl_flush_loop &&
	     SEL_ARR_IF_rg_way_in_cset_THEN_rg_new_cset_met_ETC___d179 !=
	     2'd2 &&
	     (rg_cset_in_cache != 6'd63 || !rg_way_in_cset) ;
  assign MUX_f_line_reqs$enq_1__VAL_1 = { 1'd0, wb_cline_pa__h2348 } ;
  assign MUX_f_line_reqs$enq_1__VAL_2 = { 1'd0, wb_cline_pa__h8360 } ;
  assign MUX_f_line_reqs$enq_1__VAL_3 = { 1'd1, x_addr__h3142 } ;
  assign MUX_ram_cset_cword$a_put_2__VAL_1 =
	     { rg_cset_in_cache, cword_in_cline__h1314 } ;
  assign MUX_ram_cset_cword$a_put_2__VAL_2 = { rg_va[11:6], 3'd0 } ;
  assign MUX_ram_cset_cword$a_put_2__VAL_5 =
	     (rg_cword_in_cline == 3'd7) ?
	       rg_va[11:3] :
	       next_cset_cword_in_cache__h4206 ;
  assign MUX_ram_cset_cword$b_put_2__VAL_1 =
	     { rg_va[11:6], rg_cword_in_cline } ;
  assign MUX_ram_cset_cword$b_put_3__VAL_1 =
	     rg_way_in_cset ?
	       { f_read_data$D_OUT[63:0], ram_cset_cword$DOA[63:0] } :
	       { ram_cset_cword$DOA[127:64], f_read_data$D_OUT[63:0] } ;
  assign MUX_ram_cset_cword$b_put_3__VAL_2 =
	     (mav_request_pa_req[207:206] == 2'd1 ||
	      mav_request_pa_req[207:206] == 2'd2 &&
	      mav_request_pa_req[74:70] == 5'b00011) ?
	       { IF_NOT_ram_cset_meta_a_read__2_BITS_107_TO_106_ETC___d524,
		 IF_ram_cset_meta_a_read__2_BITS_107_TO_106_4_E_ETC___d525 } :
	       { IF_NOT_ram_cset_meta_a_read__2_BITS_107_TO_106_ETC___d604,
		 IF_ram_cset_meta_a_read__2_BITS_107_TO_106_4_E_ETC___d605 } ;
  assign MUX_ram_cset_meta$a_put_2__VAL_1 =
	     (rg_cset_in_cache == 6'd63) ?
	       rg_va[11:6] :
	       next_cset_in_cache__h9034 ;
  assign MUX_ram_cset_meta$b_put_3__VAL_2 =
	     rg_way_in_cset ?
	       { 2'd0, rg_pa[63:12], ram_cset_meta$DOA[53:0] } :
	       { ram_cset_meta$DOA[107:54], 2'd0, rg_pa[63:12] } ;
  assign MUX_ram_cset_meta$b_put_3__VAL_3 =
	     rg_way_in_cset ?
	       { rg_new_meta_state,
		 new_meta_ctag__h7436,
		 rg_new_cset_meta[53:0] } :
	       { ram_cset_meta$DOA[107:54],
		 rg_new_meta_state,
		 new_meta_ctag__h7436 } ;
  assign MUX_ram_cset_meta$b_put_3__VAL_4 =
	     { (ram_cset_meta$DOA[107:106] != 2'd0 &&
		ram_cset_meta_a_read__2_BITS_105_TO_54_01_EQ_m_ETC___d307) ?
		 { 2'd2, mav_request_pa_pa[63:12] } :
		 ram_cset_meta$DOA[107:54],
	       (ram_cset_meta$DOA[107:106] == 2'd0 ||
		!ram_cset_meta_a_read__2_BITS_105_TO_54_01_EQ_m_ETC___d307) ?
		 { 2'd2, mav_request_pa_pa[63:12] } :
		 ram_cset_meta$DOA[53:0] } ;
  assign MUX_ram_cset_meta$b_put_3__VAL_5 =
	     rg_way_in_cset ?
	       { 2'd1, rg_pa[63:12], ram_cset_meta$DOA[53:0] } :
	       { ram_cset_meta$DOA[107:54], 2'd1, rg_pa[63:12] } ;
  assign MUX_rg_error_during_refill$write_1__VAL_1 =
	     !f_read_data$D_OUT[64] || rg_error_during_refill ;
  assign MUX_rg_fsm_state$write_1__VAL_2 =
	     (rg_va[5:3] == 3'd7) ? 4'd6 : 4'd1 ;
  assign MUX_rg_fsm_state$write_1__VAL_5 =
	     (SEL_ARR_IF_rg_way_in_cset_THEN_rg_new_cset_met_ETC___d179 ==
	      2'd2) ?
	       4'd3 :
	       4'd1 ;
  assign MUX_rg_fsm_state$write_1__VAL_6 =
	     (CASE_victim_way818_0_ram_cset_metaDOA_BITS_53_ETC__q9 == 2'd2) ?
	       4'd3 :
	       4'd4 ;
  assign MUX_rg_fsm_state$write_1__VAL_7 =
	     (rg_cset_in_cache == 6'd63 && rg_way_in_cset) ? 4'd1 : 4'd7 ;
  assign MUX_rg_way_in_cset$write_1__VAL_1 = !rg_way_in_cset && x__h9039 ;

  // register rg_cset_in_cache
  always@(MUX_rg_cset_in_cache$write_1__SEL_1 or
	  next_cset_in_cache__h9034 or
	  MUX_ram_cset_meta$a_put_1__SEL_3 or
	  WILL_FIRE_RL_rl_replace or
	  rg_va or WILL_FIRE_RL_rl_initialize or WILL_FIRE_RL_rl_flush_start)
  begin
    case (1'b1) // synopsys parallel_case
      MUX_rg_cset_in_cache$write_1__SEL_1:
	  rg_cset_in_cache$D_IN = next_cset_in_cache__h9034;
      MUX_ram_cset_meta$a_put_1__SEL_3:
	  rg_cset_in_cache$D_IN = next_cset_in_cache__h9034;
      WILL_FIRE_RL_rl_replace: rg_cset_in_cache$D_IN = rg_va[11:6];
      WILL_FIRE_RL_rl_initialize:
	  rg_cset_in_cache$D_IN = next_cset_in_cache__h9034;
      WILL_FIRE_RL_rl_flush_start: rg_cset_in_cache$D_IN = 6'd0;
      default: rg_cset_in_cache$D_IN = 6'b101010 /* unspecified value */ ;
    endcase
  end
  assign rg_cset_in_cache$EN =
	     WILL_FIRE_RL_rl_flush_loop_writeback_sequel &&
	     rg_cset_in_cache != 6'd63 &&
	     rg_way_in_cset ||
	     WILL_FIRE_RL_rl_flush_loop &&
	     SEL_ARR_IF_rg_way_in_cset_THEN_rg_new_cset_met_ETC___d179 !=
	     2'd2 &&
	     rg_cset_in_cache != 6'd63 &&
	     rg_way_in_cset ||
	     WILL_FIRE_RL_rl_replace ||
	     WILL_FIRE_RL_rl_initialize ||
	     WILL_FIRE_RL_rl_flush_start ;

  // register rg_cword_in_cline
  assign rg_cword_in_cline$D_IN =
	     MUX_rg_cword_in_cline$write_1__SEL_1 ?
	       cword_in_cline__h1314 :
	       3'd0 ;
  assign rg_cword_in_cline$EN =
	     (WILL_FIRE_RL_rl_refill_loop ||
	      WILL_FIRE_RL_rl_writeback_loop) &&
	     rg_cword_in_cline != 3'd7 ||
	     WILL_FIRE_RL_rl_replace &&
	     CASE_victim_way818_0_ram_cset_metaDOA_BITS_53_ETC__q9 == 2'd2 ||
	     WILL_FIRE_RL_rl_flush_loop &&
	     SEL_ARR_IF_rg_way_in_cset_THEN_rg_new_cset_met_ETC___d179 ==
	     2'd2 ||
	     WILL_FIRE_RL_rl_refill_start ;

  // register rg_error_during_refill
  assign rg_error_during_refill$D_IN =
	     WILL_FIRE_RL_rl_refill_loop &&
	     MUX_rg_error_during_refill$write_1__VAL_1 ;
  assign rg_error_during_refill$EN =
	     WILL_FIRE_RL_rl_refill_loop || WILL_FIRE_RL_rl_refill_start ||
	     EN_ma_request_va ;

  // register rg_fsm_state
  always@(MUX_rg_fsm_state$write_1__SEL_1 or
	  rg_writeback_sequel or
	  MUX_rg_fsm_state$write_1__SEL_2 or
	  MUX_rg_fsm_state$write_1__VAL_2 or
	  MUX_rg_fsm_state$write_1__SEL_5 or
	  MUX_rg_fsm_state$write_1__VAL_5 or
	  WILL_FIRE_RL_rl_replace or
	  MUX_rg_fsm_state$write_1__VAL_6 or
	  WILL_FIRE_RL_rl_flush_loop_writeback_sequel or
	  MUX_rg_fsm_state$write_1__VAL_7 or
	  MUX_rg_fsm_state$write_1__SEL_3 or
	  WILL_FIRE_RL_rl_refill_loop_final or
	  MUX_rg_fsm_state$write_1__SEL_4 or
	  WILL_FIRE_RL_rl_refill_start or WILL_FIRE_RL_rl_flush_start)
  begin
    case (1'b1) // synopsys parallel_case
      MUX_rg_fsm_state$write_1__SEL_1:
	  rg_fsm_state$D_IN = rg_writeback_sequel;
      MUX_rg_fsm_state$write_1__SEL_2:
	  rg_fsm_state$D_IN = MUX_rg_fsm_state$write_1__VAL_2;
      MUX_rg_fsm_state$write_1__SEL_5:
	  rg_fsm_state$D_IN = MUX_rg_fsm_state$write_1__VAL_5;
      WILL_FIRE_RL_rl_replace:
	  rg_fsm_state$D_IN = MUX_rg_fsm_state$write_1__VAL_6;
      WILL_FIRE_RL_rl_flush_loop_writeback_sequel:
	  rg_fsm_state$D_IN = MUX_rg_fsm_state$write_1__VAL_7;
      MUX_rg_fsm_state$write_1__SEL_3 || WILL_FIRE_RL_rl_refill_loop_final:
	  rg_fsm_state$D_IN = 4'd1;
      MUX_rg_fsm_state$write_1__SEL_4: rg_fsm_state$D_IN = 4'd2;
      WILL_FIRE_RL_rl_refill_start: rg_fsm_state$D_IN = 4'd5;
      WILL_FIRE_RL_rl_flush_start: rg_fsm_state$D_IN = 4'd7;
      default: rg_fsm_state$D_IN = 4'b1010 /* unspecified value */ ;
    endcase
  end
  assign rg_fsm_state$EN =
	     WILL_FIRE_RL_rl_writeback_loop && rg_cword_in_cline == 3'd7 ||
	     WILL_FIRE_RL_rl_refill_loop && rg_cword_in_cline == 3'd7 ||
	     WILL_FIRE_RL_rl_initialize && rg_cset_in_cache == 6'd63 ||
	     EN_mav_request_pa &&
	     (ram_cset_meta$DOA[53:52] == 2'd0 ||
	      !ram_cset_meta_a_read__2_BITS_51_TO_0_00_EQ_mav_ETC___d305) &&
	     (ram_cset_meta$DOA[107:106] == 2'd0 ||
	      !ram_cset_meta_a_read__2_BITS_105_TO_54_01_EQ_m_ETC___d307) ||
	     MUX_rg_fsm_state$write_1__SEL_5 ||
	     WILL_FIRE_RL_rl_replace ||
	     WILL_FIRE_RL_rl_flush_loop_writeback_sequel ||
	     WILL_FIRE_RL_rl_refill_loop_final ||
	     WILL_FIRE_RL_rl_refill_start ||
	     WILL_FIRE_RL_rl_flush_start ;

  // register rg_lrsc_pa
  assign rg_lrsc_pa$D_IN = mav_request_pa_pa ;
  assign rg_lrsc_pa$EN =
	     EN_mav_request_pa &&
	     NOT_ram_cset_meta_a_read__2_BITS_53_TO_52_3_EQ_ETC___d630 ;

  // register rg_lrsc_size
  assign rg_lrsc_size$D_IN = mav_request_pa_req[204:203] ;
  assign rg_lrsc_size$EN =
	     EN_mav_request_pa &&
	     NOT_ram_cset_meta_a_read__2_BITS_53_TO_52_3_EQ_ETC___d630 ;

  // register rg_lrsc_valid
  assign rg_lrsc_valid$D_IN =
	     mav_request_pa_req[207:206] == 2'd2 &&
	     mav_request_pa_req[74:70] == 5'b00010 ;
  assign rg_lrsc_valid$EN =
	     EN_mav_request_pa &&
	     NOT_ram_cset_meta_a_read__2_BITS_53_TO_52_3_EQ_ETC___d621 ;

  // register rg_new_cset_meta
  assign rg_new_cset_meta$D_IN = MUX_ram_cset_meta$b_put_3__VAL_3 ;
  assign rg_new_cset_meta$EN = WILL_FIRE_RL_rl_flush_loop ;

  // register rg_new_meta_state
  assign rg_new_meta_state$D_IN = f_flush_reqs$D_OUT ? 2'd1 : 2'd0 ;
  assign rg_new_meta_state$EN = WILL_FIRE_RL_rl_flush_start ;

  // register rg_pa
  assign rg_pa$D_IN = mav_request_pa_pa ;
  assign rg_pa$EN = EN_mav_request_pa ;

  // register rg_va
  assign rg_va$D_IN = ma_request_va_va ;
  assign rg_va$EN = EN_ma_request_va ;

  // register rg_victim_way
  assign rg_victim_way$D_IN = victim_way__h1818 ;
  assign rg_victim_way$EN = WILL_FIRE_RL_rl_replace ;

  // register rg_way_in_cset
  always@(MUX_rg_way_in_cset$write_1__SEL_1 or
	  MUX_rg_way_in_cset$write_1__VAL_1 or
	  MUX_rg_way_in_cset$write_1__SEL_2 or
	  WILL_FIRE_RL_rl_replace or
	  victim_way__h1818 or WILL_FIRE_RL_rl_flush_start)
  begin
    case (1'b1) // synopsys parallel_case
      MUX_rg_way_in_cset$write_1__SEL_1:
	  rg_way_in_cset$D_IN = MUX_rg_way_in_cset$write_1__VAL_1;
      MUX_rg_way_in_cset$write_1__SEL_2:
	  rg_way_in_cset$D_IN = MUX_rg_way_in_cset$write_1__VAL_1;
      WILL_FIRE_RL_rl_replace: rg_way_in_cset$D_IN = victim_way__h1818;
      WILL_FIRE_RL_rl_flush_start: rg_way_in_cset$D_IN = 1'd0;
      default: rg_way_in_cset$D_IN = 1'b0 /* unspecified value */ ;
    endcase
  end
  assign rg_way_in_cset$EN =
	     WILL_FIRE_RL_rl_flush_loop_writeback_sequel &&
	     (rg_cset_in_cache != 6'd63 || !rg_way_in_cset) ||
	     WILL_FIRE_RL_rl_flush_loop &&
	     SEL_ARR_IF_rg_way_in_cset_THEN_rg_new_cset_met_ETC___d179 !=
	     2'd2 &&
	     (rg_cset_in_cache != 6'd63 || !rg_way_in_cset) ||
	     WILL_FIRE_RL_rl_replace ||
	     WILL_FIRE_RL_rl_flush_start ;

  // register rg_writeback_sequel
  assign rg_writeback_sequel$D_IN =
	     MUX_f_line_reqs$enq_1__SEL_1 ? 4'd4 : 4'd8 ;
  assign rg_writeback_sequel$EN =
	     WILL_FIRE_RL_rl_replace &&
	     CASE_victim_way818_0_ram_cset_metaDOA_BITS_53_ETC__q9 == 2'd2 ||
	     WILL_FIRE_RL_rl_flush_loop &&
	     SEL_ARR_IF_rg_way_in_cset_THEN_rg_new_cset_met_ETC___d179 ==
	     2'd2 ;

  // submodule f_flush_reqs
  assign f_flush_reqs$D_IN = flush_server_request_put ;
  assign f_flush_reqs$ENQ = EN_flush_server_request_put ;
  assign f_flush_reqs$DEQ = WILL_FIRE_RL_rl_flush_start ;
  assign f_flush_reqs$CLR = 1'b0 ;

  // submodule f_flush_rsps
  assign f_flush_rsps$ENQ =
	     WILL_FIRE_RL_rl_flush_loop_writeback_sequel &&
	     rg_cset_in_cache == 6'd63 &&
	     rg_way_in_cset ||
	     WILL_FIRE_RL_rl_flush_loop &&
	     SEL_ARR_IF_rg_way_in_cset_THEN_rg_new_cset_met_ETC___d179 !=
	     2'd2 &&
	     rg_cset_in_cache == 6'd63 &&
	     rg_way_in_cset ;
  assign f_flush_rsps$DEQ = EN_flush_server_response_get ;
  assign f_flush_rsps$CLR = 1'b0 ;

  // submodule f_line_reqs
  always@(MUX_f_line_reqs$enq_1__SEL_1 or
	  MUX_f_line_reqs$enq_1__VAL_1 or
	  MUX_f_line_reqs$enq_1__SEL_2 or
	  MUX_f_line_reqs$enq_1__VAL_2 or
	  WILL_FIRE_RL_rl_refill_start or MUX_f_line_reqs$enq_1__VAL_3)
  begin
    case (1'b1) // synopsys parallel_case
      MUX_f_line_reqs$enq_1__SEL_1:
	  f_line_reqs$D_IN = MUX_f_line_reqs$enq_1__VAL_1;
      MUX_f_line_reqs$enq_1__SEL_2:
	  f_line_reqs$D_IN = MUX_f_line_reqs$enq_1__VAL_2;
      WILL_FIRE_RL_rl_refill_start:
	  f_line_reqs$D_IN = MUX_f_line_reqs$enq_1__VAL_3;
      default: f_line_reqs$D_IN =
		   65'h0AAAAAAAAAAAAAAAA /* unspecified value */ ;
    endcase
  end
  assign f_line_reqs$ENQ =
	     WILL_FIRE_RL_rl_replace &&
	     CASE_victim_way818_0_ram_cset_metaDOA_BITS_53_ETC__q9 == 2'd2 ||
	     WILL_FIRE_RL_rl_flush_loop &&
	     SEL_ARR_IF_rg_way_in_cset_THEN_rg_new_cset_met_ETC___d179 ==
	     2'd2 ||
	     WILL_FIRE_RL_rl_refill_start ;
  assign f_line_reqs$DEQ = EN_g_mem_req_get ;
  assign f_line_reqs$CLR = 1'b0 ;

  // submodule f_read_data
  assign f_read_data$D_IN = p_mem_read_data_put ;
  assign f_read_data$ENQ = EN_p_mem_read_data_put ;
  assign f_read_data$DEQ = WILL_FIRE_RL_rl_refill_loop ;
  assign f_read_data$CLR = 1'b0 ;

  // submodule f_write_data
  assign f_write_data$D_IN = cword__h1021 ;
  assign f_write_data$ENQ = WILL_FIRE_RL_rl_writeback_loop ;
  assign f_write_data$DEQ = EN_g_write_data_get ;
  assign f_write_data$CLR = 1'b0 ;

  // submodule ram_cset_cword
  always@(MUX_ram_cset_cword$a_put_1__SEL_4 or
	  WILL_FIRE_RL_rl_refill_loop_final or
	  rg_va or
	  EN_ma_request_va or
	  ma_request_va_va or
	  MUX_ram_cset_cword$a_put_1__SEL_1 or
	  MUX_ram_cset_cword$a_put_2__VAL_1 or
	  MUX_f_line_reqs$enq_1__SEL_1 or
	  MUX_ram_cset_cword$a_put_2__VAL_2 or
	  MUX_f_line_reqs$enq_1__SEL_2 or
	  cset_cword_in_cache__h8467 or
	  MUX_ram_cset_cword$a_put_1__SEL_5 or
	  MUX_ram_cset_cword$a_put_2__VAL_5 or WILL_FIRE_RL_rl_refill_start)
  begin
    case (1'b1) // synopsys parallel_case
      MUX_ram_cset_cword$a_put_1__SEL_4 || WILL_FIRE_RL_rl_refill_loop_final:
	  ram_cset_cword$ADDRA = rg_va[11:3];
      EN_ma_request_va: ram_cset_cword$ADDRA = ma_request_va_va[11:3];
      MUX_ram_cset_cword$a_put_1__SEL_1:
	  ram_cset_cword$ADDRA = MUX_ram_cset_cword$a_put_2__VAL_1;
      MUX_f_line_reqs$enq_1__SEL_1:
	  ram_cset_cword$ADDRA = MUX_ram_cset_cword$a_put_2__VAL_2;
      MUX_f_line_reqs$enq_1__SEL_2:
	  ram_cset_cword$ADDRA = cset_cword_in_cache__h8467;
      MUX_ram_cset_cword$a_put_1__SEL_5:
	  ram_cset_cword$ADDRA = MUX_ram_cset_cword$a_put_2__VAL_5;
      WILL_FIRE_RL_rl_refill_start:
	  ram_cset_cword$ADDRA = cset_cword_in_cache__h8467;
      default: ram_cset_cword$ADDRA = 9'b010101010 /* unspecified value */ ;
    endcase
  end
  assign ram_cset_cword$ADDRB =
	     MUX_ram_cset_cword$b_put_1__SEL_1 ?
	       MUX_ram_cset_cword$b_put_2__VAL_1 :
	       rg_va[11:3] ;
  always@(MUX_ram_cset_cword$a_put_1__SEL_1 or
	  MUX_f_line_reqs$enq_1__SEL_1 or
	  MUX_f_line_reqs$enq_1__SEL_2 or
	  MUX_ram_cset_cword$a_put_1__SEL_4 or
	  MUX_ram_cset_cword$a_put_1__SEL_5 or
	  WILL_FIRE_RL_rl_refill_loop_final or
	  EN_ma_request_va or WILL_FIRE_RL_rl_refill_start)
  begin
    case (1'b1) // synopsys parallel_case
      MUX_ram_cset_cword$a_put_1__SEL_1:
	  ram_cset_cword$DIA =
	      128'hAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA /* unspecified value */ ;
      MUX_f_line_reqs$enq_1__SEL_1:
	  ram_cset_cword$DIA =
	      128'hAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA /* unspecified value */ ;
      MUX_f_line_reqs$enq_1__SEL_2:
	  ram_cset_cword$DIA =
	      128'hAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA /* unspecified value */ ;
      MUX_ram_cset_cword$a_put_1__SEL_4:
	  ram_cset_cword$DIA =
	      128'hAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA /* unspecified value */ ;
      MUX_ram_cset_cword$a_put_1__SEL_5:
	  ram_cset_cword$DIA =
	      128'hAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA /* unspecified value */ ;
      WILL_FIRE_RL_rl_refill_loop_final:
	  ram_cset_cword$DIA =
	      128'hAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA /* unspecified value */ ;
      EN_ma_request_va:
	  ram_cset_cword$DIA =
	      128'hAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA /* unspecified value */ ;
      WILL_FIRE_RL_rl_refill_start:
	  ram_cset_cword$DIA =
	      128'hAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA /* unspecified value */ ;
      default: ram_cset_cword$DIA =
		   128'hAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA /* unspecified value */ ;
    endcase
  end
  assign ram_cset_cword$DIB =
	     MUX_ram_cset_cword$b_put_1__SEL_1 ?
	       MUX_ram_cset_cword$b_put_3__VAL_1 :
	       MUX_ram_cset_cword$b_put_3__VAL_2 ;
  assign ram_cset_cword$WEA = 1'd0 ;
  assign ram_cset_cword$WEB = 1'd1 ;
  assign ram_cset_cword$ENA =
	     WILL_FIRE_RL_rl_writeback_loop && rg_cword_in_cline != 3'd7 ||
	     WILL_FIRE_RL_rl_replace &&
	     CASE_victim_way818_0_ram_cset_metaDOA_BITS_53_ETC__q9 == 2'd2 ||
	     WILL_FIRE_RL_rl_flush_loop &&
	     SEL_ARR_IF_rg_way_in_cset_THEN_rg_new_cset_met_ETC___d179 ==
	     2'd2 ||
	     WILL_FIRE_RL_rl_flush_loop_writeback_sequel &&
	     rg_cset_in_cache == 6'd63 &&
	     rg_way_in_cset ||
	     WILL_FIRE_RL_rl_refill_loop &&
	     (rg_va[5:3] != 3'd7 || rg_cword_in_cline != 3'd7) ||
	     WILL_FIRE_RL_rl_refill_loop_final ||
	     EN_ma_request_va ||
	     WILL_FIRE_RL_rl_refill_start ;
  assign ram_cset_cword$ENB =
	     WILL_FIRE_RL_rl_refill_loop && f_read_data$D_OUT[64] &&
	     !rg_error_during_refill ||
	     EN_mav_request_pa &&
	     NOT_ram_cset_meta_a_read__2_BITS_53_TO_52_3_EQ_ETC___d456 ;

  // submodule ram_cset_meta
  always@(MUX_ram_cset_meta$a_put_1__SEL_2 or
	  WILL_FIRE_RL_rl_refill_loop_final or
	  rg_va or
	  EN_ma_request_va or
	  ma_request_va_va or
	  WILL_FIRE_RL_rl_initialize or
	  rg_cset_in_cache or
	  MUX_ram_cset_meta$a_put_1__SEL_1 or
	  MUX_ram_cset_meta$a_put_2__VAL_1 or
	  MUX_ram_cset_meta$a_put_1__SEL_3 or
	  next_cset_in_cache__h9034 or WILL_FIRE_RL_rl_flush_start)
  begin
    case (1'b1) // synopsys parallel_case
      MUX_ram_cset_meta$a_put_1__SEL_2 || WILL_FIRE_RL_rl_refill_loop_final:
	  ram_cset_meta$ADDRA = rg_va[11:6];
      EN_ma_request_va: ram_cset_meta$ADDRA = ma_request_va_va[11:6];
      WILL_FIRE_RL_rl_initialize: ram_cset_meta$ADDRA = rg_cset_in_cache;
      MUX_ram_cset_meta$a_put_1__SEL_1:
	  ram_cset_meta$ADDRA = MUX_ram_cset_meta$a_put_2__VAL_1;
      MUX_ram_cset_meta$a_put_1__SEL_3:
	  ram_cset_meta$ADDRA = next_cset_in_cache__h9034;
      WILL_FIRE_RL_rl_flush_start: ram_cset_meta$ADDRA = 6'd0;
      default: ram_cset_meta$ADDRA = 6'b101010 /* unspecified value */ ;
    endcase
  end
  assign ram_cset_meta$ADDRB =
	     (MUX_ram_cset_meta$b_put_1__SEL_2 ||
	      MUX_ram_cset_cword$b_put_1__SEL_2 ||
	      WILL_FIRE_RL_rl_refill_start) ?
	       rg_va[11:6] :
	       rg_cset_in_cache ;
  always@(MUX_ram_cset_meta$a_put_1__SEL_1 or
	  MUX_ram_cset_meta$a_put_1__SEL_2 or
	  MUX_ram_cset_meta$a_put_1__SEL_3 or
	  WILL_FIRE_RL_rl_refill_loop_final or
	  EN_ma_request_va or
	  WILL_FIRE_RL_rl_flush_start or WILL_FIRE_RL_rl_initialize)
  begin
    case (1'b1) // synopsys parallel_case
      MUX_ram_cset_meta$a_put_1__SEL_1:
	  ram_cset_meta$DIA =
	      108'hAAAAAAAAAAAAAAAAAAAAAAAAAAA /* unspecified value */ ;
      MUX_ram_cset_meta$a_put_1__SEL_2:
	  ram_cset_meta$DIA =
	      108'hAAAAAAAAAAAAAAAAAAAAAAAAAAA /* unspecified value */ ;
      MUX_ram_cset_meta$a_put_1__SEL_3:
	  ram_cset_meta$DIA =
	      108'hAAAAAAAAAAAAAAAAAAAAAAAAAAA /* unspecified value */ ;
      WILL_FIRE_RL_rl_refill_loop_final:
	  ram_cset_meta$DIA =
	      108'hAAAAAAAAAAAAAAAAAAAAAAAAAAA /* unspecified value */ ;
      EN_ma_request_va:
	  ram_cset_meta$DIA =
	      108'hAAAAAAAAAAAAAAAAAAAAAAAAAAA /* unspecified value */ ;
      WILL_FIRE_RL_rl_flush_start:
	  ram_cset_meta$DIA =
	      108'hAAAAAAAAAAAAAAAAAAAAAAAAAAA /* unspecified value */ ;
      WILL_FIRE_RL_rl_initialize:
	  ram_cset_meta$DIA = 108'h2AAAAAAAAAAAA8AAAAAAAAAAAAA;
      default: ram_cset_meta$DIA =
		   108'hAAAAAAAAAAAAAAAAAAAAAAAAAAA /* unspecified value */ ;
    endcase
  end
  always@(MUX_ram_cset_meta$a_put_1__SEL_1 or
	  rg_new_cset_meta or
	  MUX_ram_cset_meta$b_put_1__SEL_2 or
	  MUX_ram_cset_meta$b_put_3__VAL_2 or
	  MUX_ram_cset_meta$b_put_1__SEL_3 or
	  MUX_ram_cset_meta$b_put_3__VAL_3 or
	  MUX_ram_cset_cword$b_put_1__SEL_2 or
	  MUX_ram_cset_meta$b_put_3__VAL_4 or
	  WILL_FIRE_RL_rl_refill_start or MUX_ram_cset_meta$b_put_3__VAL_5)
  begin
    case (1'b1) // synopsys parallel_case
      MUX_ram_cset_meta$a_put_1__SEL_1: ram_cset_meta$DIB = rg_new_cset_meta;
      MUX_ram_cset_meta$b_put_1__SEL_2:
	  ram_cset_meta$DIB = MUX_ram_cset_meta$b_put_3__VAL_2;
      MUX_ram_cset_meta$b_put_1__SEL_3:
	  ram_cset_meta$DIB = MUX_ram_cset_meta$b_put_3__VAL_3;
      MUX_ram_cset_cword$b_put_1__SEL_2:
	  ram_cset_meta$DIB = MUX_ram_cset_meta$b_put_3__VAL_4;
      WILL_FIRE_RL_rl_refill_start:
	  ram_cset_meta$DIB = MUX_ram_cset_meta$b_put_3__VAL_5;
      default: ram_cset_meta$DIB =
		   108'hAAAAAAAAAAAAAAAAAAAAAAAAAAA /* unspecified value */ ;
    endcase
  end
  assign ram_cset_meta$WEA =
	     !MUX_ram_cset_meta$a_put_1__SEL_1 &&
	     !MUX_ram_cset_meta$a_put_1__SEL_2 &&
	     !MUX_ram_cset_meta$a_put_1__SEL_3 &&
	     !WILL_FIRE_RL_rl_refill_loop_final &&
	     !EN_ma_request_va &&
	     !WILL_FIRE_RL_rl_flush_start ;
  assign ram_cset_meta$WEB = 1'd1 ;
  assign ram_cset_meta$ENA =
	     WILL_FIRE_RL_rl_flush_loop_writeback_sequel && rg_way_in_cset ||
	     WILL_FIRE_RL_rl_refill_loop && rg_cword_in_cline == 3'd7 &&
	     rg_va[5:3] != 3'd7 ||
	     WILL_FIRE_RL_rl_flush_loop &&
	     SEL_ARR_IF_rg_way_in_cset_THEN_rg_new_cset_met_ETC___d179 !=
	     2'd2 &&
	     rg_cset_in_cache != 6'd63 &&
	     rg_way_in_cset ||
	     WILL_FIRE_RL_rl_refill_loop_final ||
	     EN_ma_request_va ||
	     WILL_FIRE_RL_rl_flush_start ||
	     WILL_FIRE_RL_rl_initialize ;
  assign ram_cset_meta$ENB =
	     WILL_FIRE_RL_rl_flush_loop_writeback_sequel && rg_way_in_cset ||
	     WILL_FIRE_RL_rl_refill_loop && rg_cword_in_cline == 3'd7 &&
	     (!f_read_data$D_OUT[64] || rg_error_during_refill) ||
	     WILL_FIRE_RL_rl_flush_loop &&
	     SEL_ARR_IF_rg_way_in_cset_THEN_rg_new_cset_met_ETC___d179 !=
	     2'd2 &&
	     rg_way_in_cset ||
	     EN_mav_request_pa &&
	     NOT_ram_cset_meta_a_read__2_BITS_53_TO_52_3_EQ_ETC___d456 ||
	     WILL_FIRE_RL_rl_refill_start ;

  // remaining internal signals
  assign IF_NOT_ram_cset_meta_a_read__2_BITS_107_TO_106_ETC___d524 =
	     (ram_cset_meta$DOA[107:106] != 2'd0 &&
	      ram_cset_meta_a_read__2_BITS_105_TO_54_01_EQ_m_ETC___d307) ?
	       n__h26557 :
	       ram_cset_cword$DOA[127:64] ;
  assign IF_NOT_ram_cset_meta_a_read__2_BITS_107_TO_106_ETC___d604 =
	     (ram_cset_meta$DOA[107:106] != 2'd0 &&
	      ram_cset_meta_a_read__2_BITS_105_TO_54_01_EQ_m_ETC___d307) ?
	       n__h32100 :
	       ram_cset_cword$DOA[127:64] ;
  assign IF_SEL_ARR_IF_rg_way_in_cset_THEN_rg_new_cset__ETC___d187 =
	     (SEL_ARR_IF_rg_way_in_cset_THEN_rg_new_cset_met_ETC___d179 ==
	      2'd2) ?
	       f_line_reqs$FULL_N :
	       rg_cset_in_cache != 6'd63 || !rg_way_in_cset ||
	       f_flush_rsps$FULL_N ;
  assign IF_mav_request_pa_req_BITS_204_TO_203_47_EQ_0b_ETC___d533 =
	     (mav_request_pa_req[204:203] == 2'b10) ?
	       { {32{data1844_BITS_31_TO_0__q5[31]}},
		 data1844_BITS_31_TO_0__q5 } :
	       data__h11844 ;
  assign IF_mav_request_pa_req_BITS_204_TO_203_47_EQ_0b_ETC___d535 =
	     (mav_request_pa_req[204:203] == 2'b10) ?
	       { {32{mav_request_pa_req_BITS_106_TO_75__q6[31]}},
		 mav_request_pa_req_BITS_106_TO_75__q6 } :
	       mav_request_pa_req[138:75] ;
  assign IF_mav_request_pa_req_BITS_207_TO_206_12_EQ_2__ETC___d715 =
	     (mav_request_pa_req[207:206] == 2'd2 &&
	      mav_request_pa_req[74:70] == 5'b00011) ?
	       ((rg_lrsc_valid && rg_lrsc_pa_46_EQ_mav_request_pa_pa___d447) ?
		  2'd2 :
		  2'd1) :
	       2'd2 ;
  assign IF_ram_cset_meta_a_read__2_BITS_107_TO_106_4_E_ETC___d525 =
	     (ram_cset_meta$DOA[107:106] == 2'd0 ||
	      !ram_cset_meta_a_read__2_BITS_105_TO_54_01_EQ_m_ETC___d307) ?
	       n__h26557 :
	       ram_cset_cword$DOA[63:0] ;
  assign IF_ram_cset_meta_a_read__2_BITS_107_TO_106_4_E_ETC___d605 =
	     (ram_cset_meta$DOA[107:106] == 2'd0 ||
	      !ram_cset_meta_a_read__2_BITS_105_TO_54_01_EQ_m_ETC___d307) ?
	       n__h32100 :
	       ram_cset_cword$DOA[63:0] ;
  assign IF_ram_cset_meta_a_read__2_BITS_53_TO_52_3_EQ__ETC___d719 =
	     ((ram_cset_meta$DOA[53:52] == 2'd0 ||
	       !ram_cset_meta_a_read__2_BITS_51_TO_0_00_EQ_mav_ETC___d305) &&
	      (ram_cset_meta$DOA[107:106] == 2'd0 ||
	       !ram_cset_meta_a_read__2_BITS_105_TO_54_01_EQ_m_ETC___d307)) ?
	       2'd0 :
	       CASE_mav_request_pa_req_BITS_207_TO_206_0_1_1__ETC__q8 ;
  assign IF_rg_way_in_cset_THEN_IF_rg_way_in_cset_THEN__ETC___d224 =
	     rg_way_in_cset ?
	       IF_rg_way_in_cset_THEN_rg_new_cset_meta_73_BIT_ETC___d175 :
	       rg_new_meta_state ;
  assign IF_rg_way_in_cset_THEN_rg_new_cset_meta_73_BIT_ETC___d175 =
	     rg_way_in_cset ?
	       rg_new_cset_meta[53:52] :
	       ram_cset_meta$DOA[53:52] ;
  assign IF_rg_way_in_cset_THEN_rg_new_cset_meta_73_BIT_ETC___d177 =
	     rg_way_in_cset ?
	       rg_new_cset_meta[107:106] :
	       ram_cset_meta$DOA[107:106] ;
  assign IF_rg_way_in_cset_THEN_rg_new_meta_state_92_EL_ETC___d235 =
	     rg_way_in_cset ?
	       rg_new_meta_state :
	       IF_rg_way_in_cset_THEN_rg_new_cset_meta_73_BIT_ETC___d177 ;
  assign NOT_SEL_ARR_IF_rg_way_in_cset_THEN_rg_new_cset_ETC___d270 =
	     SEL_ARR_IF_rg_way_in_cset_THEN_rg_new_cset_met_ETC___d179 !=
	     2'd2 &&
	     rg_cset_in_cache == 6'd63 &&
	     rg_way_in_cset &&
	     NOT_verbosity_ULT_2_6___d17 ;
  assign NOT_ram_cset_meta_a_read__2_BITS_53_TO_52_3_EQ_ETC___d342 =
	     (ram_cset_meta$DOA[53:52] != 2'd0 &&
	      ram_cset_meta_a_read__2_BITS_51_TO_0_00_EQ_mav_ETC___d305 ||
	      ram_cset_meta$DOA[107:106] != 2'd0 &&
	      ram_cset_meta_a_read__2_BITS_105_TO_54_01_EQ_m_ETC___d307) &&
	     mav_request_pa_req[207:206] == 2'd0 &&
	     verbosity != 3'd0 ;
  assign NOT_ram_cset_meta_a_read__2_BITS_53_TO_52_3_EQ_ETC___d456 =
	     (ram_cset_meta$DOA[53:52] != 2'd0 &&
	      ram_cset_meta_a_read__2_BITS_51_TO_0_00_EQ_mav_ETC___d305 ||
	      ram_cset_meta$DOA[107:106] != 2'd0 &&
	      ram_cset_meta_a_read__2_BITS_105_TO_54_01_EQ_m_ETC___d307) &&
	     mav_request_pa_req[207:206] != 2'd0 &&
	     (mav_request_pa_req[207:206] != 2'd2 ||
	      mav_request_pa_req[74:70] != 5'b00010) &&
	     (rg_lrsc_valid && rg_lrsc_pa_46_EQ_mav_request_pa_pa___d447 ||
	      mav_request_pa_req[207:206] != 2'd2 ||
	      mav_request_pa_req[74:70] != 5'b00011) ;
  assign NOT_ram_cset_meta_a_read__2_BITS_53_TO_52_3_EQ_ETC___d621 =
	     (ram_cset_meta$DOA[53:52] != 2'd0 &&
	      ram_cset_meta_a_read__2_BITS_51_TO_0_00_EQ_mav_ETC___d305 ||
	      ram_cset_meta$DOA[107:106] != 2'd0 &&
	      ram_cset_meta_a_read__2_BITS_105_TO_54_01_EQ_m_ETC___d307) &&
	     mav_request_pa_req[207:206] != 2'd0 &&
	     mav_request_pa_req_BITS_207_TO_206_12_EQ_1_15__ETC___d619 ;
  assign NOT_ram_cset_meta_a_read__2_BITS_53_TO_52_3_EQ_ETC___d623 =
	     (ram_cset_meta$DOA[53:52] != 2'd0 &&
	      ram_cset_meta_a_read__2_BITS_51_TO_0_00_EQ_mav_ETC___d305 ||
	      ram_cset_meta$DOA[107:106] != 2'd0 &&
	      ram_cset_meta_a_read__2_BITS_105_TO_54_01_EQ_m_ETC___d307) &&
	     mav_request_pa_req[207:206] == 2'd1 &&
	     verbosity != 3'd0 ;
  assign NOT_ram_cset_meta_a_read__2_BITS_53_TO_52_3_EQ_ETC___d627 =
	     (ram_cset_meta$DOA[53:52] != 2'd0 &&
	      ram_cset_meta_a_read__2_BITS_51_TO_0_00_EQ_mav_ETC___d305 ||
	      ram_cset_meta$DOA[107:106] != 2'd0 &&
	      ram_cset_meta_a_read__2_BITS_105_TO_54_01_EQ_m_ETC___d307) &&
	     mav_request_pa_req[207:206] == 2'd2 &&
	     mav_request_pa_req[74:70] == 5'b00010 &&
	     verbosity != 3'd0 ;
  assign NOT_ram_cset_meta_a_read__2_BITS_53_TO_52_3_EQ_ETC___d630 =
	     (ram_cset_meta$DOA[53:52] != 2'd0 &&
	      ram_cset_meta_a_read__2_BITS_51_TO_0_00_EQ_mav_ETC___d305 ||
	      ram_cset_meta$DOA[107:106] != 2'd0 &&
	      ram_cset_meta_a_read__2_BITS_105_TO_54_01_EQ_m_ETC___d307) &&
	     mav_request_pa_req[207:206] == 2'd2 &&
	     mav_request_pa_req[74:70] == 5'b00010 ;
  assign NOT_ram_cset_meta_a_read__2_BITS_53_TO_52_3_EQ_ETC___d633 =
	     (ram_cset_meta$DOA[53:52] != 2'd0 &&
	      ram_cset_meta_a_read__2_BITS_51_TO_0_00_EQ_mav_ETC___d305 ||
	      ram_cset_meta$DOA[107:106] != 2'd0 &&
	      ram_cset_meta_a_read__2_BITS_105_TO_54_01_EQ_m_ETC___d307) &&
	     mav_request_pa_req[207:206] == 2'd2 &&
	     mav_request_pa_req[74:70] == 5'b00011 &&
	     rg_lrsc_valid &&
	     rg_lrsc_pa_46_EQ_mav_request_pa_pa___d447 &&
	     verbosity != 3'd0 ;
  assign NOT_ram_cset_meta_a_read__2_BITS_53_TO_52_3_EQ_ETC___d641 =
	     (ram_cset_meta$DOA[53:52] != 2'd0 &&
	      ram_cset_meta_a_read__2_BITS_51_TO_0_00_EQ_mav_ETC___d305 ||
	      ram_cset_meta$DOA[107:106] != 2'd0 &&
	      ram_cset_meta_a_read__2_BITS_105_TO_54_01_EQ_m_ETC___d307) &&
	     mav_request_pa_req[207:206] == 2'd2 &&
	     mav_request_pa_req[74:70] == 5'b00011 &&
	     (!rg_lrsc_valid || !rg_lrsc_pa_46_EQ_mav_request_pa_pa___d447) &&
	     verbosity != 3'd0 ;
  assign NOT_ram_cset_meta_a_read__2_BITS_53_TO_52_3_EQ_ETC___d648 =
	     (ram_cset_meta$DOA[53:52] != 2'd0 &&
	      ram_cset_meta_a_read__2_BITS_51_TO_0_00_EQ_mav_ETC___d305 ||
	      ram_cset_meta$DOA[107:106] != 2'd0 &&
	      ram_cset_meta_a_read__2_BITS_105_TO_54_01_EQ_m_ETC___d307) &&
	     mav_request_pa_req[207:206] != 2'd0 &&
	     mav_request_pa_req[207:206] != 2'd1 &&
	     (mav_request_pa_req[207:206] != 2'd2 ||
	      mav_request_pa_req[74:70] != 5'b00010) &&
	     (mav_request_pa_req[207:206] != 2'd2 ||
	      mav_request_pa_req[74:70] != 5'b00011) &&
	     verbosity != 3'd0 ;
  assign NOT_ram_cset_meta_a_read__2_BITS_53_TO_52_3_EQ_ETC___d655 =
	     (ram_cset_meta$DOA[53:52] != 2'd0 &&
	      ram_cset_meta_a_read__2_BITS_51_TO_0_00_EQ_mav_ETC___d305 ||
	      ram_cset_meta$DOA[107:106] != 2'd0 &&
	      ram_cset_meta_a_read__2_BITS_105_TO_54_01_EQ_m_ETC___d307) &&
	     mav_request_pa_req[207:206] != 2'd0 &&
	     mav_request_pa_req[207:206] != 2'd1 &&
	     mav_request_pa_req[207:206] != 2'd2 &&
	     verbosity != 3'd0 &&
	     mav_request_pa_req[74:70] == 5'b00010 ;
  assign NOT_ram_cset_meta_a_read__2_BITS_53_TO_52_3_EQ_ETC___d660 =
	     (ram_cset_meta$DOA[53:52] != 2'd0 &&
	      ram_cset_meta_a_read__2_BITS_51_TO_0_00_EQ_mav_ETC___d305 ||
	      ram_cset_meta$DOA[107:106] != 2'd0 &&
	      ram_cset_meta_a_read__2_BITS_105_TO_54_01_EQ_m_ETC___d307) &&
	     mav_request_pa_req[207:206] != 2'd0 &&
	     mav_request_pa_req[207:206] != 2'd1 &&
	     mav_request_pa_req[207:206] != 2'd2 &&
	     verbosity != 3'd0 &&
	     mav_request_pa_req[74:70] == 5'b00011 ;
  assign NOT_ram_cset_meta_a_read__2_BITS_53_TO_52_3_EQ_ETC___d664 =
	     (ram_cset_meta$DOA[53:52] != 2'd0 &&
	      ram_cset_meta_a_read__2_BITS_51_TO_0_00_EQ_mav_ETC___d305 ||
	      ram_cset_meta$DOA[107:106] != 2'd0 &&
	      ram_cset_meta_a_read__2_BITS_105_TO_54_01_EQ_m_ETC___d307) &&
	     mav_request_pa_req[207:206] != 2'd0 &&
	     mav_request_pa_req[207:206] != 2'd1 &&
	     verbosity != 3'd0 &&
	     mav_request_pa_req[74:70] == 5'b0 ;
  assign NOT_ram_cset_meta_a_read__2_BITS_53_TO_52_3_EQ_ETC___d668 =
	     (ram_cset_meta$DOA[53:52] != 2'd0 &&
	      ram_cset_meta_a_read__2_BITS_51_TO_0_00_EQ_mav_ETC___d305 ||
	      ram_cset_meta$DOA[107:106] != 2'd0 &&
	      ram_cset_meta_a_read__2_BITS_105_TO_54_01_EQ_m_ETC___d307) &&
	     mav_request_pa_req[207:206] != 2'd0 &&
	     mav_request_pa_req[207:206] != 2'd1 &&
	     verbosity != 3'd0 &&
	     mav_request_pa_req[74:70] == 5'b00001 ;
  assign NOT_ram_cset_meta_a_read__2_BITS_53_TO_52_3_EQ_ETC___d672 =
	     (ram_cset_meta$DOA[53:52] != 2'd0 &&
	      ram_cset_meta_a_read__2_BITS_51_TO_0_00_EQ_mav_ETC___d305 ||
	      ram_cset_meta$DOA[107:106] != 2'd0 &&
	      ram_cset_meta_a_read__2_BITS_105_TO_54_01_EQ_m_ETC___d307) &&
	     mav_request_pa_req[207:206] != 2'd0 &&
	     mav_request_pa_req[207:206] != 2'd1 &&
	     verbosity != 3'd0 &&
	     mav_request_pa_req[74:70] == 5'b00100 ;
  assign NOT_ram_cset_meta_a_read__2_BITS_53_TO_52_3_EQ_ETC___d676 =
	     (ram_cset_meta$DOA[53:52] != 2'd0 &&
	      ram_cset_meta_a_read__2_BITS_51_TO_0_00_EQ_mav_ETC___d305 ||
	      ram_cset_meta$DOA[107:106] != 2'd0 &&
	      ram_cset_meta_a_read__2_BITS_105_TO_54_01_EQ_m_ETC___d307) &&
	     mav_request_pa_req[207:206] != 2'd0 &&
	     mav_request_pa_req[207:206] != 2'd1 &&
	     verbosity != 3'd0 &&
	     mav_request_pa_req[74:70] == 5'b01100 ;
  assign NOT_ram_cset_meta_a_read__2_BITS_53_TO_52_3_EQ_ETC___d680 =
	     (ram_cset_meta$DOA[53:52] != 2'd0 &&
	      ram_cset_meta_a_read__2_BITS_51_TO_0_00_EQ_mav_ETC___d305 ||
	      ram_cset_meta$DOA[107:106] != 2'd0 &&
	      ram_cset_meta_a_read__2_BITS_105_TO_54_01_EQ_m_ETC___d307) &&
	     mav_request_pa_req[207:206] != 2'd0 &&
	     mav_request_pa_req[207:206] != 2'd1 &&
	     verbosity != 3'd0 &&
	     mav_request_pa_req[74:70] == 5'b01000 ;
  assign NOT_ram_cset_meta_a_read__2_BITS_53_TO_52_3_EQ_ETC___d684 =
	     (ram_cset_meta$DOA[53:52] != 2'd0 &&
	      ram_cset_meta_a_read__2_BITS_51_TO_0_00_EQ_mav_ETC___d305 ||
	      ram_cset_meta$DOA[107:106] != 2'd0 &&
	      ram_cset_meta_a_read__2_BITS_105_TO_54_01_EQ_m_ETC___d307) &&
	     mav_request_pa_req[207:206] != 2'd0 &&
	     mav_request_pa_req[207:206] != 2'd1 &&
	     verbosity != 3'd0 &&
	     mav_request_pa_req[74:70] == 5'b10000 ;
  assign NOT_ram_cset_meta_a_read__2_BITS_53_TO_52_3_EQ_ETC___d688 =
	     (ram_cset_meta$DOA[53:52] != 2'd0 &&
	      ram_cset_meta_a_read__2_BITS_51_TO_0_00_EQ_mav_ETC___d305 ||
	      ram_cset_meta$DOA[107:106] != 2'd0 &&
	      ram_cset_meta_a_read__2_BITS_105_TO_54_01_EQ_m_ETC___d307) &&
	     mav_request_pa_req[207:206] != 2'd0 &&
	     mav_request_pa_req[207:206] != 2'd1 &&
	     verbosity != 3'd0 &&
	     mav_request_pa_req[74:70] == 5'b10100 ;
  assign NOT_ram_cset_meta_a_read__2_BITS_53_TO_52_3_EQ_ETC___d692 =
	     (ram_cset_meta$DOA[53:52] != 2'd0 &&
	      ram_cset_meta_a_read__2_BITS_51_TO_0_00_EQ_mav_ETC___d305 ||
	      ram_cset_meta$DOA[107:106] != 2'd0 &&
	      ram_cset_meta_a_read__2_BITS_105_TO_54_01_EQ_m_ETC___d307) &&
	     mav_request_pa_req[207:206] != 2'd0 &&
	     mav_request_pa_req[207:206] != 2'd1 &&
	     verbosity != 3'd0 &&
	     mav_request_pa_req[74:70] == 5'b11000 ;
  assign NOT_ram_cset_meta_a_read__2_BITS_53_TO_52_3_EQ_ETC___d713 =
	     (ram_cset_meta$DOA[53:52] != 2'd0 &&
	      ram_cset_meta_a_read__2_BITS_51_TO_0_00_EQ_mav_ETC___d305 ||
	      ram_cset_meta$DOA[107:106] != 2'd0 &&
	      ram_cset_meta_a_read__2_BITS_105_TO_54_01_EQ_m_ETC___d307) &&
	     mav_request_pa_req[207:206] != 2'd0 &&
	     mav_request_pa_req[207:206] != 2'd1 &&
	     verbosity != 3'd0 &&
	     mav_request_pa_req[74:70] != 5'b00010 &&
	     mav_request_pa_req[74:70] != 5'b00011 &&
	     mav_request_pa_req[74:70] != 5'b0 &&
	     mav_request_pa_req[74:70] != 5'b00001 &&
	     mav_request_pa_req[74:70] != 5'b00100 &&
	     mav_request_pa_req[74:70] != 5'b01100 &&
	     mav_request_pa_req[74:70] != 5'b01000 &&
	     mav_request_pa_req[74:70] != 5'b10000 &&
	     mav_request_pa_req[74:70] != 5'b10100 &&
	     mav_request_pa_req[74:70] != 5'b11000 ;
  assign NOT_verbosity_ULT_2_6___d17 = verbosity >= 3'd2 ;
  assign cset_cword_in_cache__h8467 = { rg_cset_in_cache, 3'd0 } ;
  assign ctag__h7443 =
	     rg_way_in_cset ?
	       rg_new_cset_meta[105:54] :
	       ram_cset_meta$DOA[105:54] ;
  assign ctag__h7489 =
	     rg_way_in_cset ?
	       rg_new_cset_meta[51:0] :
	       ram_cset_meta$DOA[51:0] ;
  assign cword_in_cline__h1314 = rg_cword_in_cline + 3'd1 ;
  assign data1844_BITS_31_TO_0__q5 = data__h11844[31:0] ;
  assign data1__h12889 = hit_miss_info_data__h11861 >> shamt__h31224 ;
  assign data__h11844 = data1__h12889 & mask__h31270 ;
  assign data__h11845 =
	     (!mav_request_pa_req[205] &&
	      CASE_mav_request_pa_req_BITS_204_TO_203_0b0_da_ETC__q3) ?
	       result__h25809 :
	       result__h25881 ;
  assign final_st_val__h31344 = { 32'd0, _theResult_____2__h31340[31:0] } ;
  assign final_st_val__h31434 =
	     IF_mav_request_pa_req_BITS_204_TO_203_47_EQ_0b_ETC___d533 +
	     IF_mav_request_pa_req_BITS_204_TO_203_47_EQ_0b_ETC___d535 ;
  assign final_st_val__h31512 = w1__h31333 ^ w2__h31335 ;
  assign final_st_val__h31516 = w1__h31333 & w2__h31335 ;
  assign final_st_val__h31520 = w1__h31333 | w2__h31335 ;
  assign final_st_val__h31524 =
	     (w1__h31333 < w2__h31335) ? w1__h31333 : w2__h31335 ;
  assign final_st_val__h31529 =
	     (w1__h31333 <= w2__h31335) ? w2__h31335 : w1__h31333 ;
  assign final_st_val__h31535 =
	     ((IF_mav_request_pa_req_BITS_204_TO_203_47_EQ_0b_ETC___d533 ^
	       64'h8000000000000000) <
	      (IF_mav_request_pa_req_BITS_204_TO_203_47_EQ_0b_ETC___d535 ^
	       64'h8000000000000000)) ?
	       w1__h31333 :
	       w2__h31335 ;
  assign final_st_val__h31540 =
	     ((IF_mav_request_pa_req_BITS_204_TO_203_47_EQ_0b_ETC___d533 ^
	       64'h8000000000000000) <=
	      (IF_mav_request_pa_req_BITS_204_TO_203_47_EQ_0b_ETC___d535 ^
	       64'h8000000000000000)) ?
	       w2__h31335 :
	       w1__h31333 ;
  assign hit_miss_info_data__h11861 = x__h12901 | y__h12902 ;
  assign mav_request_pa_req_BITS_106_TO_75__q6 = mav_request_pa_req[106:75] ;
  assign mav_request_pa_req_BITS_207_TO_206_12_EQ_1_15__ETC___d619 =
	     mav_request_pa_req[207:206] == 2'd1 &&
	     rg_lrsc_pa_46_EQ_mav_request_pa_pa___d447 ||
	     mav_request_pa_req[207:206] != 2'd1 &&
	     (mav_request_pa_req[207:206] == 2'd2 &&
	      mav_request_pa_req[74:70] == 5'b00010 ||
	      mav_request_pa_req[207:206] == 2'd2 &&
	      mav_request_pa_req[74:70] == 5'b00011 &&
	      rg_lrsc_valid &&
	      rg_lrsc_pa_46_EQ_mav_request_pa_pa___d447 ||
	      (mav_request_pa_req[207:206] != 2'd2 ||
	       mav_request_pa_req[74:70] != 5'b00011) &&
	      rg_lrsc_pa_46_EQ_mav_request_pa_pa___d447) ;
  assign new_st_val__h31190 =
	     (mav_request_pa_req[204:203] == 2'b10) ?
	       final_st_val__h31344 :
	       _theResult_____2__h31340 ;
  assign next_cset_cword_in_cache__h4206 =
	     { rg_va[11:6], cword_in_cline__h1314 } ;
  assign next_cset_in_cache__h9034 = rg_cset_in_cache + 6'd1 ;
  assign ram_cset_meta_a_read__2_BITS_105_TO_54_01_EQ_m_ETC___d307 =
	     ram_cset_meta$DOA[105:54] == mav_request_pa_pa[63:12] ;
  assign ram_cset_meta_a_read__2_BITS_51_TO_0_00_EQ_mav_ETC___d305 =
	     ram_cset_meta$DOA[51:0] == mav_request_pa_pa[63:12] ;
  assign ram_cset_meta_a_read__2_BITS_53_TO_52_3_EQ_0_8_ETC___d337 =
	     (ram_cset_meta$DOA[53:52] == 2'd0 ||
	      !ram_cset_meta_a_read__2_BITS_51_TO_0_00_EQ_mav_ETC___d305) &&
	     (ram_cset_meta$DOA[107:106] == 2'd0 ||
	      !ram_cset_meta_a_read__2_BITS_105_TO_54_01_EQ_m_ETC___d307) &&
	     verbosity != 3'd0 ;
  assign result__h25809 = data__h11844 | y__h25821 ;
  assign result__h25881 = data__h11844 & mask__h31270 ;
  assign rg_cword_in_cline_3_EQ_7_2_AND_NOT_verbosity_E_ETC___d67 =
	     rg_cword_in_cline == 3'd7 && verbosity != 3'd0 &&
	     rg_writeback_sequel != 4'd0 &&
	     rg_writeback_sequel != 4'd1 &&
	     rg_writeback_sequel != 4'd2 &&
	     rg_writeback_sequel != 4'd3 &&
	     rg_writeback_sequel != 4'd4 &&
	     rg_writeback_sequel != 4'd5 &&
	     rg_writeback_sequel != 4'd6 &&
	     rg_writeback_sequel != 4'd7 ;
  assign rg_lrsc_pa_46_EQ_mav_request_pa_pa___d447 =
	     rg_lrsc_pa == mav_request_pa_pa ;
  assign shamt__h31224 = { mav_request_pa_req[141:139], 3'b0 } ;
  assign tmp__h2046 = { 1'd0, rg_victim_way } ;
  assign tmp__h2047 = tmp__h2046 + 2'd1 ;
  assign victim_way__h1818 =
	     (ram_cset_meta$DOA[107:106] != 2'd0 &&
	      ram_cset_meta$DOA[53:52] != 2'd0) ?
	       tmp__h2047[0] :
	       ram_cset_meta$DOA[53:52] != 2'd0 &&
	       ram_cset_meta$DOA[107:106] == 2'd0 ;
  assign w1___1__h31403 = { 32'd0, data__h11844[31:0] } ;
  assign w1__h31333 =
	     (mav_request_pa_req[204:203] == 2'b10) ?
	       w1___1__h31403 :
	       data__h11844 ;
  assign w2___1__h31404 = { 32'd0, mav_request_pa_req[106:75] } ;
  assign w2__h31335 =
	     (mav_request_pa_req[204:203] == 2'b10) ?
	       w2___1__h31404 :
	       mav_request_pa_req[138:75] ;
  assign wb_cline_pa__h2348 =
	     { CASE_victim_way818_0_ram_cset_metaDOA_BITS_51_ETC__q1,
	       rg_va[11:6],
	       6'd0 } ;
  assign wb_cline_pa__h8360 =
	     { CASE_rg_way_in_cset_0_ram_cset_metaDOA_BITS_5_ETC__q2,
	       rg_cset_in_cache,
	       6'd0 } ;
  assign x1_avValue_final_ld_val__h30909 =
	     (rg_lrsc_valid && rg_lrsc_pa_46_EQ_mav_request_pa_pa___d447) ?
	       64'd0 :
	       64'd1 ;
  assign x1_avValue_final_ld_val__h33813 =
	     (mav_request_pa_req[207:206] == 2'd2 &&
	      mav_request_pa_req[74:70] == 5'b00011) ?
	       x1_avValue_final_ld_val__h30909 :
	       IF_mav_request_pa_req_BITS_204_TO_203_47_EQ_0b_ETC___d533 ;
  assign x1_avValue_final_ld_val__h33824 =
	     (mav_request_pa_req[207:206] == 2'd2 &&
	      mav_request_pa_req[74:70] == 5'b00010) ?
	       data__h11845 :
	       x1_avValue_final_ld_val__h33813 ;
  assign x1_avValue_final_st_val__h30910 =
	     (rg_lrsc_valid && rg_lrsc_pa_46_EQ_mav_request_pa_pa___d447) ?
	       mav_request_pa_req[138:75] :
	       64'd0 ;
  assign x1_avValue_final_st_val__h33825 =
	     (mav_request_pa_req[207:206] == 2'd2 &&
	      mav_request_pa_req[74:70] == 5'b00011) ?
	       x1_avValue_final_st_val__h30910 :
	       new_st_val__h31190 ;
  assign x__h12901 = ram_cset_cword$DOA[63:0] & y__h12916 ;
  assign x__h33888 =
	     (mav_request_pa_req[207:206] == 2'd1) ?
	       mav_request_pa_req[138:75] :
	       x1_avValue_final_st_val__h33825 ;
  assign x__h9039 = rg_way_in_cset + 1'd1 ;
  assign x_addr__h3142 = { rg_pa[63:6], 6'd0 } ;
  assign y__h12902 = ram_cset_cword$DOA[127:64] & y__h19231 ;
  assign y__h12916 =
	     {64{ram_cset_meta$DOA[53:52] != 2'd0 &&
		 ram_cset_meta_a_read__2_BITS_51_TO_0_00_EQ_mav_ETC___d305}} ;
  assign y__h19231 =
	     {64{ram_cset_meta$DOA[107:106] != 2'd0 &&
		 ram_cset_meta_a_read__2_BITS_105_TO_54_01_EQ_m_ETC___d307}} ;
  always@(rg_way_in_cset or ctag__h7489 or ctag__h7443)
  begin
    case (rg_way_in_cset)
      1'd0: new_meta_ctag__h7436 = ctag__h7489;
      1'd1: new_meta_ctag__h7436 = ctag__h7443;
    endcase
  end
  always@(mav_request_pa_req)
  begin
    case (mav_request_pa_req[204:203])
      2'b0: mask__h31270 = 64'h00000000000000FF;
      2'b01: mask__h31270 = 64'h000000000000FFFF;
      2'b10: mask__h31270 = 64'h00000000FFFFFFFF;
      2'd3: mask__h31270 = 64'hFFFFFFFFFFFFFFFF;
    endcase
  end
  always@(mav_request_pa_req)
  begin
    case (mav_request_pa_req[204:203])
      2'b0: y__h25821 = 64'hFFFFFFFFFFFFFF00;
      2'b01: y__h25821 = 64'hFFFFFFFFFFFF0000;
      2'b10: y__h25821 = 64'hFFFFFFFF00000000;
      2'd3: y__h25821 = 64'd0;
    endcase
  end
  always@(rg_way_in_cset or ram_cset_cword$DOA)
  begin
    case (rg_way_in_cset)
      1'd0: cword__h1021 = ram_cset_cword$DOA[63:0];
      1'd1: cword__h1021 = ram_cset_cword$DOA[127:64];
    endcase
  end
  always@(victim_way__h1818 or ram_cset_meta$DOA)
  begin
    case (victim_way__h1818)
      1'd0:
	  CASE_victim_way818_0_ram_cset_metaDOA_BITS_51_ETC__q1 =
	      ram_cset_meta$DOA[51:0];
      1'd1:
	  CASE_victim_way818_0_ram_cset_metaDOA_BITS_51_ETC__q1 =
	      ram_cset_meta$DOA[105:54];
    endcase
  end
  always@(rg_way_in_cset or ram_cset_meta$DOA)
  begin
    case (rg_way_in_cset)
      1'd0:
	  CASE_rg_way_in_cset_0_ram_cset_metaDOA_BITS_5_ETC__q2 =
	      ram_cset_meta$DOA[51:0];
      1'd1:
	  CASE_rg_way_in_cset_0_ram_cset_metaDOA_BITS_5_ETC__q2 =
	      ram_cset_meta$DOA[105:54];
    endcase
  end
  always@(rg_way_in_cset or
	  IF_rg_way_in_cset_THEN_rg_new_cset_meta_73_BIT_ETC___d175 or
	  IF_rg_way_in_cset_THEN_rg_new_cset_meta_73_BIT_ETC___d177)
  begin
    case (rg_way_in_cset)
      1'd0:
	  SEL_ARR_IF_rg_way_in_cset_THEN_rg_new_cset_met_ETC___d179 =
	      IF_rg_way_in_cset_THEN_rg_new_cset_meta_73_BIT_ETC___d175;
      1'd1:
	  SEL_ARR_IF_rg_way_in_cset_THEN_rg_new_cset_met_ETC___d179 =
	      IF_rg_way_in_cset_THEN_rg_new_cset_meta_73_BIT_ETC___d177;
    endcase
  end
  always@(ram_cset_meta$DOA or
	  ram_cset_meta_a_read__2_BITS_105_TO_54_01_EQ_m_ETC___d307 or
	  ram_cset_cword$DOA)
  begin
    case (ram_cset_meta$DOA[107:106] != 2'd0 &&
	  ram_cset_meta_a_read__2_BITS_105_TO_54_01_EQ_m_ETC___d307)
      1'd0: old_cword__h26546 = ram_cset_cword$DOA[63:0];
      1'd1: old_cword__h26546 = ram_cset_cword$DOA[127:64];
    endcase
  end
  always@(mav_request_pa_req or data__h11844)
  begin
    case (mav_request_pa_req[204:203])
      2'b0:
	  CASE_mav_request_pa_req_BITS_204_TO_203_0b0_da_ETC__q3 =
	      data__h11844[7];
      2'b01:
	  CASE_mav_request_pa_req_BITS_204_TO_203_0b0_da_ETC__q3 =
	      data__h11844[15];
      2'b10:
	  CASE_mav_request_pa_req_BITS_204_TO_203_0b0_da_ETC__q3 =
	      data__h11844[31];
      2'd3:
	  CASE_mav_request_pa_req_BITS_204_TO_203_0b0_da_ETC__q3 =
	      data__h11844[63];
    endcase
  end
  always@(mav_request_pa_pa or old_cword__h26546 or mav_request_pa_req)
  begin
    case (mav_request_pa_pa[2:0])
      3'h0:
	  IF_mav_request_pa_pa_BITS_2_TO_0_61_EQ_0x0_62__ETC___d501 =
	      { old_cword__h26546[63:8], mav_request_pa_req[82:75] };
      3'h1:
	  IF_mav_request_pa_pa_BITS_2_TO_0_61_EQ_0x0_62__ETC___d501 =
	      { old_cword__h26546[63:16],
		mav_request_pa_req[82:75],
		old_cword__h26546[7:0] };
      3'h2:
	  IF_mav_request_pa_pa_BITS_2_TO_0_61_EQ_0x0_62__ETC___d501 =
	      { old_cword__h26546[63:24],
		mav_request_pa_req[82:75],
		old_cword__h26546[15:0] };
      3'h3:
	  IF_mav_request_pa_pa_BITS_2_TO_0_61_EQ_0x0_62__ETC___d501 =
	      { old_cword__h26546[63:32],
		mav_request_pa_req[82:75],
		old_cword__h26546[23:0] };
      3'h4:
	  IF_mav_request_pa_pa_BITS_2_TO_0_61_EQ_0x0_62__ETC___d501 =
	      { old_cword__h26546[63:40],
		mav_request_pa_req[82:75],
		old_cword__h26546[31:0] };
      3'h5:
	  IF_mav_request_pa_pa_BITS_2_TO_0_61_EQ_0x0_62__ETC___d501 =
	      { old_cword__h26546[63:48],
		mav_request_pa_req[82:75],
		old_cword__h26546[39:0] };
      3'h6:
	  IF_mav_request_pa_pa_BITS_2_TO_0_61_EQ_0x0_62__ETC___d501 =
	      { old_cword__h26546[63:56],
		mav_request_pa_req[82:75],
		old_cword__h26546[47:0] };
      3'h7:
	  IF_mav_request_pa_pa_BITS_2_TO_0_61_EQ_0x0_62__ETC___d501 =
	      { mav_request_pa_req[82:75], old_cword__h26546[55:0] };
    endcase
  end
  always@(mav_request_pa_pa or old_cword__h26546 or mav_request_pa_req)
  begin
    case (mav_request_pa_pa[2:0])
      3'h0:
	  IF_mav_request_pa_pa_BITS_2_TO_0_61_EQ_0x0_62__ETC___d511 =
	      { old_cword__h26546[63:16], mav_request_pa_req[90:75] };
      3'h2:
	  IF_mav_request_pa_pa_BITS_2_TO_0_61_EQ_0x0_62__ETC___d511 =
	      { old_cword__h26546[63:32],
		mav_request_pa_req[90:75],
		old_cword__h26546[15:0] };
      3'h4:
	  IF_mav_request_pa_pa_BITS_2_TO_0_61_EQ_0x0_62__ETC___d511 =
	      { old_cword__h26546[63:48],
		mav_request_pa_req[90:75],
		old_cword__h26546[31:0] };
      3'h6:
	  IF_mav_request_pa_pa_BITS_2_TO_0_61_EQ_0x0_62__ETC___d511 =
	      { mav_request_pa_req[90:75], old_cword__h26546[47:0] };
      default: IF_mav_request_pa_pa_BITS_2_TO_0_61_EQ_0x0_62__ETC___d511 =
		   old_cword__h26546;
    endcase
  end
  always@(mav_request_pa_pa or old_cword__h26546 or mav_request_pa_req)
  begin
    case (mav_request_pa_pa[2:0])
      3'h0:
	  CASE_mav_request_pa_pa_BITS_2_TO_0_0x0_old_cwo_ETC__q4 =
	      { old_cword__h26546[63:32], mav_request_pa_req[106:75] };
      3'h4:
	  CASE_mav_request_pa_pa_BITS_2_TO_0_0x0_old_cwo_ETC__q4 =
	      { mav_request_pa_req[106:75], old_cword__h26546[31:0] };
      default: CASE_mav_request_pa_pa_BITS_2_TO_0_0x0_old_cwo_ETC__q4 =
		   old_cword__h26546;
    endcase
  end
  always@(mav_request_pa_req or
	  old_cword__h26546 or
	  IF_mav_request_pa_pa_BITS_2_TO_0_61_EQ_0x0_62__ETC___d501 or
	  IF_mav_request_pa_pa_BITS_2_TO_0_61_EQ_0x0_62__ETC___d511 or
	  CASE_mav_request_pa_pa_BITS_2_TO_0_0x0_old_cwo_ETC__q4)
  begin
    case (mav_request_pa_req[205:203])
      3'b0:
	  n__h26557 =
	      IF_mav_request_pa_pa_BITS_2_TO_0_61_EQ_0x0_62__ETC___d501;
      3'b001:
	  n__h26557 =
	      IF_mav_request_pa_pa_BITS_2_TO_0_61_EQ_0x0_62__ETC___d511;
      3'b010:
	  n__h26557 = CASE_mav_request_pa_pa_BITS_2_TO_0_0x0_old_cwo_ETC__q4;
      3'b011: n__h26557 = mav_request_pa_req[138:75];
      default: n__h26557 = old_cword__h26546;
    endcase
  end
  always@(mav_request_pa_req or
	  x1_avValue_final_ld_val__h33824 or data__h11845)
  begin
    case (mav_request_pa_req[207:206])
      2'd0: x__h33879 = data__h11845;
      2'd1: x__h33879 = 64'd0;
      default: x__h33879 = x1_avValue_final_ld_val__h33824;
    endcase
  end
  always@(mav_request_pa_req or
	  final_st_val__h31540 or
	  final_st_val__h31434 or
	  w2__h31335 or
	  final_st_val__h31512 or
	  final_st_val__h31520 or
	  final_st_val__h31516 or
	  final_st_val__h31535 or
	  final_st_val__h31524 or final_st_val__h31529)
  begin
    case (mav_request_pa_req[74:70])
      5'b0: _theResult_____2__h31340 = final_st_val__h31434;
      5'b00001: _theResult_____2__h31340 = w2__h31335;
      5'b00100: _theResult_____2__h31340 = final_st_val__h31512;
      5'b01000: _theResult_____2__h31340 = final_st_val__h31520;
      5'b01100: _theResult_____2__h31340 = final_st_val__h31516;
      5'b10000: _theResult_____2__h31340 = final_st_val__h31535;
      5'b11000: _theResult_____2__h31340 = final_st_val__h31524;
      5'b11100: _theResult_____2__h31340 = final_st_val__h31529;
      default: _theResult_____2__h31340 = final_st_val__h31540;
    endcase
  end
  always@(mav_request_pa_pa or old_cword__h26546 or new_st_val__h31190)
  begin
    case (mav_request_pa_pa[2:0])
      3'h0:
	  IF_mav_request_pa_pa_BITS_2_TO_0_61_EQ_0x0_62__ETC___d594 =
	      { old_cword__h26546[63:16], new_st_val__h31190[15:0] };
      3'h2:
	  IF_mav_request_pa_pa_BITS_2_TO_0_61_EQ_0x0_62__ETC___d594 =
	      { old_cword__h26546[63:32],
		new_st_val__h31190[15:0],
		old_cword__h26546[15:0] };
      3'h4:
	  IF_mav_request_pa_pa_BITS_2_TO_0_61_EQ_0x0_62__ETC___d594 =
	      { old_cword__h26546[63:48],
		new_st_val__h31190[15:0],
		old_cword__h26546[31:0] };
      3'h6:
	  IF_mav_request_pa_pa_BITS_2_TO_0_61_EQ_0x0_62__ETC___d594 =
	      { new_st_val__h31190[15:0], old_cword__h26546[47:0] };
      default: IF_mav_request_pa_pa_BITS_2_TO_0_61_EQ_0x0_62__ETC___d594 =
		   old_cword__h26546;
    endcase
  end
  always@(mav_request_pa_pa or old_cword__h26546 or new_st_val__h31190)
  begin
    case (mav_request_pa_pa[2:0])
      3'h0:
	  IF_mav_request_pa_pa_BITS_2_TO_0_61_EQ_0x0_62__ETC___d585 =
	      { old_cword__h26546[63:8], new_st_val__h31190[7:0] };
      3'h1:
	  IF_mav_request_pa_pa_BITS_2_TO_0_61_EQ_0x0_62__ETC___d585 =
	      { old_cword__h26546[63:16],
		new_st_val__h31190[7:0],
		old_cword__h26546[7:0] };
      3'h2:
	  IF_mav_request_pa_pa_BITS_2_TO_0_61_EQ_0x0_62__ETC___d585 =
	      { old_cword__h26546[63:24],
		new_st_val__h31190[7:0],
		old_cword__h26546[15:0] };
      3'h3:
	  IF_mav_request_pa_pa_BITS_2_TO_0_61_EQ_0x0_62__ETC___d585 =
	      { old_cword__h26546[63:32],
		new_st_val__h31190[7:0],
		old_cword__h26546[23:0] };
      3'h4:
	  IF_mav_request_pa_pa_BITS_2_TO_0_61_EQ_0x0_62__ETC___d585 =
	      { old_cword__h26546[63:40],
		new_st_val__h31190[7:0],
		old_cword__h26546[31:0] };
      3'h5:
	  IF_mav_request_pa_pa_BITS_2_TO_0_61_EQ_0x0_62__ETC___d585 =
	      { old_cword__h26546[63:48],
		new_st_val__h31190[7:0],
		old_cword__h26546[39:0] };
      3'h6:
	  IF_mav_request_pa_pa_BITS_2_TO_0_61_EQ_0x0_62__ETC___d585 =
	      { old_cword__h26546[63:56],
		new_st_val__h31190[7:0],
		old_cword__h26546[47:0] };
      3'h7:
	  IF_mav_request_pa_pa_BITS_2_TO_0_61_EQ_0x0_62__ETC___d585 =
	      { new_st_val__h31190[7:0], old_cword__h26546[55:0] };
    endcase
  end
  always@(mav_request_pa_pa or old_cword__h26546 or new_st_val__h31190)
  begin
    case (mav_request_pa_pa[2:0])
      3'h0:
	  CASE_mav_request_pa_pa_BITS_2_TO_0_0x0_old_cwo_ETC__q7 =
	      { old_cword__h26546[63:32], new_st_val__h31190[31:0] };
      3'h4:
	  CASE_mav_request_pa_pa_BITS_2_TO_0_0x0_old_cwo_ETC__q7 =
	      { new_st_val__h31190[31:0], old_cword__h26546[31:0] };
      default: CASE_mav_request_pa_pa_BITS_2_TO_0_0x0_old_cwo_ETC__q7 =
		   old_cword__h26546;
    endcase
  end
  always@(mav_request_pa_req or
	  old_cword__h26546 or
	  IF_mav_request_pa_pa_BITS_2_TO_0_61_EQ_0x0_62__ETC___d585 or
	  IF_mav_request_pa_pa_BITS_2_TO_0_61_EQ_0x0_62__ETC___d594 or
	  CASE_mav_request_pa_pa_BITS_2_TO_0_0x0_old_cwo_ETC__q7 or
	  new_st_val__h31190)
  begin
    case (mav_request_pa_req[205:203])
      3'b0:
	  n__h32100 =
	      IF_mav_request_pa_pa_BITS_2_TO_0_61_EQ_0x0_62__ETC___d585;
      3'b001:
	  n__h32100 =
	      IF_mav_request_pa_pa_BITS_2_TO_0_61_EQ_0x0_62__ETC___d594;
      3'b010:
	  n__h32100 = CASE_mav_request_pa_pa_BITS_2_TO_0_0x0_old_cwo_ETC__q7;
      3'b011: n__h32100 = new_st_val__h31190;
      default: n__h32100 = old_cword__h26546;
    endcase
  end
  always@(mav_request_pa_req or
	  IF_mav_request_pa_req_BITS_207_TO_206_12_EQ_2__ETC___d715)
  begin
    case (mav_request_pa_req[207:206])
      2'd0: CASE_mav_request_pa_req_BITS_207_TO_206_0_1_1__ETC__q8 = 2'd1;
      2'd1: CASE_mav_request_pa_req_BITS_207_TO_206_0_1_1__ETC__q8 = 2'd2;
      default: CASE_mav_request_pa_req_BITS_207_TO_206_0_1_1__ETC__q8 =
		   (mav_request_pa_req[207:206] == 2'd2 &&
		    mav_request_pa_req[74:70] == 5'b00010) ?
		     2'd1 :
		     IF_mav_request_pa_req_BITS_207_TO_206_12_EQ_2__ETC___d715;
    endcase
  end
  always@(victim_way__h1818 or ram_cset_meta$DOA)
  begin
    case (victim_way__h1818)
      1'd0:
	  CASE_victim_way818_0_ram_cset_metaDOA_BITS_53_ETC__q9 =
	      ram_cset_meta$DOA[53:52];
      1'd1:
	  CASE_victim_way818_0_ram_cset_metaDOA_BITS_53_ETC__q9 =
	      ram_cset_meta$DOA[107:106];
    endcase
  end

  // handling of inlined registers

  always@(posedge CLK)
  begin
    if (RST_N == `BSV_RESET_VALUE)
      begin
        rg_cset_in_cache <= `BSV_ASSIGNMENT_DELAY 6'd0;
	rg_fsm_state <= `BSV_ASSIGNMENT_DELAY 4'd0;
	rg_lrsc_valid <= `BSV_ASSIGNMENT_DELAY 1'd0;
	rg_victim_way <= `BSV_ASSIGNMENT_DELAY 1'd0;
      end
    else
      begin
        if (rg_cset_in_cache$EN)
	  rg_cset_in_cache <= `BSV_ASSIGNMENT_DELAY rg_cset_in_cache$D_IN;
	if (rg_fsm_state$EN)
	  rg_fsm_state <= `BSV_ASSIGNMENT_DELAY rg_fsm_state$D_IN;
	if (rg_lrsc_valid$EN)
	  rg_lrsc_valid <= `BSV_ASSIGNMENT_DELAY rg_lrsc_valid$D_IN;
	if (rg_victim_way$EN)
	  rg_victim_way <= `BSV_ASSIGNMENT_DELAY rg_victim_way$D_IN;
      end
    if (rg_cword_in_cline$EN)
      rg_cword_in_cline <= `BSV_ASSIGNMENT_DELAY rg_cword_in_cline$D_IN;
    if (rg_error_during_refill$EN)
      rg_error_during_refill <= `BSV_ASSIGNMENT_DELAY
	  rg_error_during_refill$D_IN;
    if (rg_lrsc_pa$EN) rg_lrsc_pa <= `BSV_ASSIGNMENT_DELAY rg_lrsc_pa$D_IN;
    if (rg_lrsc_size$EN)
      rg_lrsc_size <= `BSV_ASSIGNMENT_DELAY rg_lrsc_size$D_IN;
    if (rg_new_cset_meta$EN)
      rg_new_cset_meta <= `BSV_ASSIGNMENT_DELAY rg_new_cset_meta$D_IN;
    if (rg_new_meta_state$EN)
      rg_new_meta_state <= `BSV_ASSIGNMENT_DELAY rg_new_meta_state$D_IN;
    if (rg_pa$EN) rg_pa <= `BSV_ASSIGNMENT_DELAY rg_pa$D_IN;
    if (rg_va$EN) rg_va <= `BSV_ASSIGNMENT_DELAY rg_va$D_IN;
    if (rg_way_in_cset$EN)
      rg_way_in_cset <= `BSV_ASSIGNMENT_DELAY rg_way_in_cset$D_IN;
    if (rg_writeback_sequel$EN)
      rg_writeback_sequel <= `BSV_ASSIGNMENT_DELAY rg_writeback_sequel$D_IN;
  end

  // synopsys translate_off
  `ifdef BSV_NO_INITIAL_BLOCKS
  `else // not BSV_NO_INITIAL_BLOCKS
  initial
  begin
    rg_cset_in_cache = 6'h2A;
    rg_cword_in_cline = 3'h2;
    rg_error_during_refill = 1'h0;
    rg_fsm_state = 4'hA;
    rg_lrsc_pa = 64'hAAAAAAAAAAAAAAAA;
    rg_lrsc_size = 2'h2;
    rg_lrsc_valid = 1'h0;
    rg_new_cset_meta = 108'hAAAAAAAAAAAAAAAAAAAAAAAAAAA;
    rg_new_meta_state = 2'h2;
    rg_pa = 64'hAAAAAAAAAAAAAAAA;
    rg_va = 64'hAAAAAAAAAAAAAAAA;
    rg_victim_way = 1'h0;
    rg_way_in_cset = 1'h0;
    rg_writeback_sequel = 4'hA;
  end
  `endif // BSV_NO_INITIAL_BLOCKS
  // synopsys translate_on

  // handling of system tasks

  // synopsys translate_off
  always@(negedge CLK)
  begin
    #0;
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_mav_request_pa && ram_cset_meta$DOA[53:52] != 2'd0 &&
	  ram_cset_meta_a_read__2_BITS_51_TO_0_00_EQ_mav_ETC___d305 &&
	  ram_cset_meta$DOA[107:106] != 2'd0 &&
	  ram_cset_meta_a_read__2_BITS_105_TO_54_01_EQ_m_ETC___d307)
	begin
	  v__h12039 = $stime;
	  #0;
	end
    v__h12033 = v__h12039 / 32'd10;
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_mav_request_pa && ram_cset_meta$DOA[53:52] != 2'd0 &&
	  ram_cset_meta_a_read__2_BITS_51_TO_0_00_EQ_mav_ETC___d305 &&
	  ram_cset_meta$DOA[107:106] != 2'd0 &&
	  ram_cset_meta_a_read__2_BITS_105_TO_54_01_EQ_m_ETC___d307)
	$display("%0d: %m.mav_request_pa: INTERNAL ERROR", v__h12033);
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_mav_request_pa && ram_cset_meta$DOA[53:52] != 2'd0 &&
	  ram_cset_meta_a_read__2_BITS_51_TO_0_00_EQ_mav_ETC___d305 &&
	  ram_cset_meta$DOA[107:106] != 2'd0 &&
	  ram_cset_meta_a_read__2_BITS_105_TO_54_01_EQ_m_ETC___d307)
	$write("    ");
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_mav_request_pa && ram_cset_meta$DOA[53:52] != 2'd0 &&
	  ram_cset_meta_a_read__2_BITS_51_TO_0_00_EQ_mav_ETC___d305 &&
	  ram_cset_meta$DOA[107:106] != 2'd0 &&
	  ram_cset_meta_a_read__2_BITS_105_TO_54_01_EQ_m_ETC___d307 &&
	  mav_request_pa_req[207:206] == 2'd0)
	$write("CACHE_LD");
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_mav_request_pa && ram_cset_meta$DOA[53:52] != 2'd0 &&
	  ram_cset_meta_a_read__2_BITS_51_TO_0_00_EQ_mav_ETC___d305 &&
	  ram_cset_meta$DOA[107:106] != 2'd0 &&
	  ram_cset_meta_a_read__2_BITS_105_TO_54_01_EQ_m_ETC___d307 &&
	  mav_request_pa_req[207:206] == 2'd1)
	$write("CACHE_ST");
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_mav_request_pa && ram_cset_meta$DOA[53:52] != 2'd0 &&
	  ram_cset_meta_a_read__2_BITS_51_TO_0_00_EQ_mav_ETC___d305 &&
	  ram_cset_meta$DOA[107:106] != 2'd0 &&
	  ram_cset_meta_a_read__2_BITS_105_TO_54_01_EQ_m_ETC___d307 &&
	  mav_request_pa_req[207:206] != 2'd0 &&
	  mav_request_pa_req[207:206] != 2'd1)
	$write("CACHE_AMO");
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_mav_request_pa && ram_cset_meta$DOA[53:52] != 2'd0 &&
	  ram_cset_meta_a_read__2_BITS_51_TO_0_00_EQ_mav_ETC___d305 &&
	  ram_cset_meta$DOA[107:106] != 2'd0 &&
	  ram_cset_meta_a_read__2_BITS_105_TO_54_01_EQ_m_ETC___d307)
	$write(" va %0h pa %0h",
	       mav_request_pa_req[202:139],
	       mav_request_pa_pa,
	       "\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_mav_request_pa && ram_cset_meta$DOA[53:52] != 2'd0 &&
	  ram_cset_meta_a_read__2_BITS_51_TO_0_00_EQ_mav_ETC___d305 &&
	  ram_cset_meta$DOA[107:106] != 2'd0 &&
	  ram_cset_meta_a_read__2_BITS_105_TO_54_01_EQ_m_ETC___d307)
	$display("    # of hits in set > 1 (should be 0 or 1)");
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_mav_request_pa && ram_cset_meta$DOA[53:52] != 2'd0 &&
	  ram_cset_meta_a_read__2_BITS_51_TO_0_00_EQ_mav_ETC___d305 &&
	  ram_cset_meta$DOA[107:106] != 2'd0 &&
	  ram_cset_meta_a_read__2_BITS_105_TO_54_01_EQ_m_ETC___d307)
	$write("CSet[%0h] (state, tag){", rg_va[11:6]);
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_mav_request_pa && ram_cset_meta$DOA[53:52] != 2'd0 &&
	  ram_cset_meta_a_read__2_BITS_51_TO_0_00_EQ_mav_ETC___d305 &&
	  ram_cset_meta$DOA[107:106] != 2'd0 &&
	  ram_cset_meta_a_read__2_BITS_105_TO_54_01_EQ_m_ETC___d307)
	$write(" way%0d (", $signed(32'd0));
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_mav_request_pa &&
	  ram_cset_meta_a_read__2_BITS_51_TO_0_00_EQ_mav_ETC___d305 &&
	  ram_cset_meta$DOA[107:106] != 2'd0 &&
	  ram_cset_meta_a_read__2_BITS_105_TO_54_01_EQ_m_ETC___d307 &&
	  ram_cset_meta$DOA[53:52] == 2'd1)
	$write("SHARED");
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_mav_request_pa && ram_cset_meta$DOA[53:52] != 2'd0 &&
	  ram_cset_meta_a_read__2_BITS_51_TO_0_00_EQ_mav_ETC___d305 &&
	  ram_cset_meta$DOA[107:106] != 2'd0 &&
	  ram_cset_meta_a_read__2_BITS_105_TO_54_01_EQ_m_ETC___d307 &&
	  ram_cset_meta$DOA[53:52] != 2'd1)
	$write("MODIFIED");
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_mav_request_pa && ram_cset_meta$DOA[53:52] != 2'd0 &&
	  ram_cset_meta_a_read__2_BITS_51_TO_0_00_EQ_mav_ETC___d305 &&
	  ram_cset_meta$DOA[107:106] != 2'd0 &&
	  ram_cset_meta_a_read__2_BITS_105_TO_54_01_EQ_m_ETC___d307)
	$write(", ctag %0h", ram_cset_meta$DOA[51:0]);
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_mav_request_pa && ram_cset_meta$DOA[53:52] != 2'd0 &&
	  ram_cset_meta_a_read__2_BITS_51_TO_0_00_EQ_mav_ETC___d305 &&
	  ram_cset_meta$DOA[107:106] != 2'd0 &&
	  ram_cset_meta_a_read__2_BITS_105_TO_54_01_EQ_m_ETC___d307)
	$write(")");
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_mav_request_pa && ram_cset_meta$DOA[53:52] != 2'd0 &&
	  ram_cset_meta_a_read__2_BITS_51_TO_0_00_EQ_mav_ETC___d305 &&
	  ram_cset_meta$DOA[107:106] != 2'd0 &&
	  ram_cset_meta_a_read__2_BITS_105_TO_54_01_EQ_m_ETC___d307)
	$write(" way%0d (", $signed(32'd1));
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_mav_request_pa && ram_cset_meta$DOA[53:52] != 2'd0 &&
	  ram_cset_meta_a_read__2_BITS_51_TO_0_00_EQ_mav_ETC___d305 &&
	  ram_cset_meta_a_read__2_BITS_105_TO_54_01_EQ_m_ETC___d307 &&
	  ram_cset_meta$DOA[107:106] == 2'd1)
	$write("SHARED");
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_mav_request_pa && ram_cset_meta$DOA[53:52] != 2'd0 &&
	  ram_cset_meta_a_read__2_BITS_51_TO_0_00_EQ_mav_ETC___d305 &&
	  ram_cset_meta$DOA[107:106] != 2'd0 &&
	  ram_cset_meta_a_read__2_BITS_105_TO_54_01_EQ_m_ETC___d307 &&
	  ram_cset_meta$DOA[107:106] != 2'd1)
	$write("MODIFIED");
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_mav_request_pa && ram_cset_meta$DOA[53:52] != 2'd0 &&
	  ram_cset_meta_a_read__2_BITS_51_TO_0_00_EQ_mav_ETC___d305 &&
	  ram_cset_meta$DOA[107:106] != 2'd0 &&
	  ram_cset_meta_a_read__2_BITS_105_TO_54_01_EQ_m_ETC___d307)
	$write(", ctag %0h", ram_cset_meta$DOA[105:54]);
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_mav_request_pa && ram_cset_meta$DOA[53:52] != 2'd0 &&
	  ram_cset_meta_a_read__2_BITS_51_TO_0_00_EQ_mav_ETC___d305 &&
	  ram_cset_meta$DOA[107:106] != 2'd0 &&
	  ram_cset_meta_a_read__2_BITS_105_TO_54_01_EQ_m_ETC___d307)
	$write(")");
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_mav_request_pa && ram_cset_meta$DOA[53:52] != 2'd0 &&
	  ram_cset_meta_a_read__2_BITS_51_TO_0_00_EQ_mav_ETC___d305 &&
	  ram_cset_meta$DOA[107:106] != 2'd0 &&
	  ram_cset_meta_a_read__2_BITS_105_TO_54_01_EQ_m_ETC___d307)
	$write("}");
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_mav_request_pa && ram_cset_meta$DOA[53:52] != 2'd0 &&
	  ram_cset_meta_a_read__2_BITS_51_TO_0_00_EQ_mav_ETC___d305 &&
	  ram_cset_meta$DOA[107:106] != 2'd0 &&
	  ram_cset_meta_a_read__2_BITS_105_TO_54_01_EQ_m_ETC___d307)
	$write("\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_mav_request_pa && ram_cset_meta$DOA[53:52] != 2'd0 &&
	  ram_cset_meta_a_read__2_BITS_51_TO_0_00_EQ_mav_ETC___d305 &&
	  ram_cset_meta$DOA[107:106] != 2'd0 &&
	  ram_cset_meta_a_read__2_BITS_105_TO_54_01_EQ_m_ETC___d307)
	$finish(32'd1);
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_mav_request_pa &&
	  ram_cset_meta_a_read__2_BITS_53_TO_52_3_EQ_0_8_ETC___d337)
	begin
	  v__h12492 = $stime;
	  #0;
	end
    v__h12486 = v__h12492 / 32'd10;
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_mav_request_pa &&
	  ram_cset_meta_a_read__2_BITS_53_TO_52_3_EQ_0_8_ETC___d337)
	$display("%0d: %m.mav_request_pa: MISS: va %0h pa %0h",
		 v__h12486,
		 mav_request_pa_req[202:139],
		 mav_request_pa_pa);
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_mav_request_pa &&
	  ram_cset_meta_a_read__2_BITS_53_TO_52_3_EQ_0_8_ETC___d337)
	$display("    Starting replacement");
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_mav_request_pa &&
	  NOT_ram_cset_meta_a_read__2_BITS_53_TO_52_3_EQ_ETC___d342)
	begin
	  v__h12770 = $stime;
	  #0;
	end
    v__h12764 = v__h12770 / 32'd10;
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_mav_request_pa &&
	  NOT_ram_cset_meta_a_read__2_BITS_53_TO_52_3_EQ_ETC___d342)
	$display("%0d: %m.mav_request_pa: Load-hit: va %0h pa %0h data %0h",
		 v__h12764,
		 mav_request_pa_req[202:139],
		 mav_request_pa_pa,
		 data__h11845);
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_mav_request_pa &&
	  NOT_ram_cset_meta_a_read__2_BITS_53_TO_52_3_EQ_ETC___d623)
	begin
	  v__h25960 = $stime;
	  #0;
	end
    v__h25954 = v__h25960 / 32'd10;
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_mav_request_pa &&
	  NOT_ram_cset_meta_a_read__2_BITS_53_TO_52_3_EQ_ETC___d623)
	$display("%0d: %m.mav_request_pa: Store-hit: va %0h pa %0h data %0h",
		 v__h25954,
		 mav_request_pa_req[202:139],
		 mav_request_pa_pa,
		 mav_request_pa_req[138:75]);
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_mav_request_pa &&
	  NOT_ram_cset_meta_a_read__2_BITS_53_TO_52_3_EQ_ETC___d623)
	$display("      cache.fa_write: va_cset_cword_in_cache %0h way %0d pa %0h f3 %0d st_value %0h",
		 rg_va[11:3],
		 ram_cset_meta$DOA[107:106] != 2'd0 &&
		 ram_cset_meta_a_read__2_BITS_105_TO_54_01_EQ_m_ETC___d307,
		 mav_request_pa_pa,
		 mav_request_pa_req[205:203],
		 mav_request_pa_req[138:75]);
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_mav_request_pa &&
	  NOT_ram_cset_meta_a_read__2_BITS_53_TO_52_3_EQ_ETC___d623)
	$write("      from: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_mav_request_pa &&
	  NOT_ram_cset_meta_a_read__2_BITS_53_TO_52_3_EQ_ETC___d623)
	$write("CSet_CWord {", "%0h", ram_cset_cword$DOA[63:0]);
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_mav_request_pa &&
	  NOT_ram_cset_meta_a_read__2_BITS_53_TO_52_3_EQ_ETC___d623)
	$write(", ");
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_mav_request_pa &&
	  NOT_ram_cset_meta_a_read__2_BITS_53_TO_52_3_EQ_ETC___d623)
	$write("%0h", ram_cset_cword$DOA[127:64]);
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_mav_request_pa &&
	  NOT_ram_cset_meta_a_read__2_BITS_53_TO_52_3_EQ_ETC___d623)
	$write("}");
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_mav_request_pa &&
	  NOT_ram_cset_meta_a_read__2_BITS_53_TO_52_3_EQ_ETC___d623)
	$write("\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_mav_request_pa &&
	  NOT_ram_cset_meta_a_read__2_BITS_53_TO_52_3_EQ_ETC___d623)
	$write("      to:   ");
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_mav_request_pa &&
	  NOT_ram_cset_meta_a_read__2_BITS_53_TO_52_3_EQ_ETC___d623)
	$write("CSet_CWord {",
	       "%0h",
	       IF_ram_cset_meta_a_read__2_BITS_107_TO_106_4_E_ETC___d525);
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_mav_request_pa &&
	  NOT_ram_cset_meta_a_read__2_BITS_53_TO_52_3_EQ_ETC___d623)
	$write(", ");
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_mav_request_pa &&
	  NOT_ram_cset_meta_a_read__2_BITS_53_TO_52_3_EQ_ETC___d623)
	$write("%0h",
	       IF_NOT_ram_cset_meta_a_read__2_BITS_107_TO_106_ETC___d524);
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_mav_request_pa &&
	  NOT_ram_cset_meta_a_read__2_BITS_53_TO_52_3_EQ_ETC___d623)
	$write("}");
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_mav_request_pa &&
	  NOT_ram_cset_meta_a_read__2_BITS_53_TO_52_3_EQ_ETC___d623)
	$write("\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_mav_request_pa &&
	  NOT_ram_cset_meta_a_read__2_BITS_53_TO_52_3_EQ_ETC___d627)
	begin
	  v__h28327 = $stime;
	  #0;
	end
    v__h28321 = v__h28327 / 32'd10;
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_mav_request_pa &&
	  NOT_ram_cset_meta_a_read__2_BITS_53_TO_52_3_EQ_ETC___d627)
	$display("%0d: %m.mav_request_pa: LR-hit: va %0h pa %0h data %0h",
		 v__h28321,
		 mav_request_pa_req[202:139],
		 mav_request_pa_pa,
		 data__h11845);
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_mav_request_pa &&
	  NOT_ram_cset_meta_a_read__2_BITS_53_TO_52_3_EQ_ETC___d633)
	begin
	  v__h28571 = $stime;
	  #0;
	end
    v__h28565 = v__h28571 / 32'd10;
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_mav_request_pa &&
	  NOT_ram_cset_meta_a_read__2_BITS_53_TO_52_3_EQ_ETC___d633)
	$display("%0d: %m.mav_request_pa: SC-hit and success: va %0h pa %0h data %0h",
		 v__h28565,
		 mav_request_pa_req[202:139],
		 mav_request_pa_pa,
		 mav_request_pa_req[138:75]);
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_mav_request_pa &&
	  NOT_ram_cset_meta_a_read__2_BITS_53_TO_52_3_EQ_ETC___d633)
	$display("      cache.fa_write: va_cset_cword_in_cache %0h way %0d pa %0h f3 %0d st_value %0h",
		 rg_va[11:3],
		 ram_cset_meta$DOA[107:106] != 2'd0 &&
		 ram_cset_meta_a_read__2_BITS_105_TO_54_01_EQ_m_ETC___d307,
		 mav_request_pa_pa,
		 mav_request_pa_req[205:203],
		 mav_request_pa_req[138:75]);
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_mav_request_pa &&
	  NOT_ram_cset_meta_a_read__2_BITS_53_TO_52_3_EQ_ETC___d633)
	$write("      from: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_mav_request_pa &&
	  NOT_ram_cset_meta_a_read__2_BITS_53_TO_52_3_EQ_ETC___d633)
	$write("CSet_CWord {", "%0h", ram_cset_cword$DOA[63:0]);
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_mav_request_pa &&
	  NOT_ram_cset_meta_a_read__2_BITS_53_TO_52_3_EQ_ETC___d633)
	$write(", ");
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_mav_request_pa &&
	  NOT_ram_cset_meta_a_read__2_BITS_53_TO_52_3_EQ_ETC___d633)
	$write("%0h", ram_cset_cword$DOA[127:64]);
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_mav_request_pa &&
	  NOT_ram_cset_meta_a_read__2_BITS_53_TO_52_3_EQ_ETC___d633)
	$write("}");
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_mav_request_pa &&
	  NOT_ram_cset_meta_a_read__2_BITS_53_TO_52_3_EQ_ETC___d633)
	$write("\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_mav_request_pa &&
	  NOT_ram_cset_meta_a_read__2_BITS_53_TO_52_3_EQ_ETC___d633)
	$write("      to:   ");
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_mav_request_pa &&
	  NOT_ram_cset_meta_a_read__2_BITS_53_TO_52_3_EQ_ETC___d633)
	$write("CSet_CWord {",
	       "%0h",
	       IF_ram_cset_meta_a_read__2_BITS_107_TO_106_4_E_ETC___d525);
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_mav_request_pa &&
	  NOT_ram_cset_meta_a_read__2_BITS_53_TO_52_3_EQ_ETC___d633)
	$write(", ");
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_mav_request_pa &&
	  NOT_ram_cset_meta_a_read__2_BITS_53_TO_52_3_EQ_ETC___d633)
	$write("%0h",
	       IF_NOT_ram_cset_meta_a_read__2_BITS_107_TO_106_ETC___d524);
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_mav_request_pa &&
	  NOT_ram_cset_meta_a_read__2_BITS_53_TO_52_3_EQ_ETC___d633)
	$write("}");
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_mav_request_pa &&
	  NOT_ram_cset_meta_a_read__2_BITS_53_TO_52_3_EQ_ETC___d633)
	$write("\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_mav_request_pa &&
	  NOT_ram_cset_meta_a_read__2_BITS_53_TO_52_3_EQ_ETC___d641)
	begin
	  v__h30841 = $stime;
	  #0;
	end
    v__h30835 = v__h30841 / 32'd10;
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_mav_request_pa &&
	  NOT_ram_cset_meta_a_read__2_BITS_53_TO_52_3_EQ_ETC___d641)
	$display("%0d: %m.mav_request_pa: SC-hit and fail: va %0h pa %0h data %0h",
		 v__h30835,
		 mav_request_pa_req[202:139],
		 mav_request_pa_pa,
		 mav_request_pa_req[138:75]);
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_mav_request_pa &&
	  NOT_ram_cset_meta_a_read__2_BITS_53_TO_52_3_EQ_ETC___d648)
	begin
	  v__h30987 = $stime;
	  #0;
	end
    v__h30981 = v__h30987 / 32'd10;
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_mav_request_pa &&
	  NOT_ram_cset_meta_a_read__2_BITS_53_TO_52_3_EQ_ETC___d648)
	$write("%0d: %m.mav_request_pa: f3 %3b AMO ",
	       v__h30981,
	       mav_request_pa_req[205:203]);
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_mav_request_pa &&
	  NOT_ram_cset_meta_a_read__2_BITS_53_TO_52_3_EQ_ETC___d655)
	$write("LR");
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_mav_request_pa &&
	  NOT_ram_cset_meta_a_read__2_BITS_53_TO_52_3_EQ_ETC___d660)
	$write("SC");
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_mav_request_pa &&
	  NOT_ram_cset_meta_a_read__2_BITS_53_TO_52_3_EQ_ETC___d664)
	$write("ADD");
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_mav_request_pa &&
	  NOT_ram_cset_meta_a_read__2_BITS_53_TO_52_3_EQ_ETC___d668)
	$write("SWAP");
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_mav_request_pa &&
	  NOT_ram_cset_meta_a_read__2_BITS_53_TO_52_3_EQ_ETC___d672)
	$write("XOR");
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_mav_request_pa &&
	  NOT_ram_cset_meta_a_read__2_BITS_53_TO_52_3_EQ_ETC___d676)
	$write("AND");
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_mav_request_pa &&
	  NOT_ram_cset_meta_a_read__2_BITS_53_TO_52_3_EQ_ETC___d680)
	$write("OR");
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_mav_request_pa &&
	  NOT_ram_cset_meta_a_read__2_BITS_53_TO_52_3_EQ_ETC___d684)
	$write("MIN");
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_mav_request_pa &&
	  NOT_ram_cset_meta_a_read__2_BITS_53_TO_52_3_EQ_ETC___d688)
	$write("MAX");
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_mav_request_pa &&
	  NOT_ram_cset_meta_a_read__2_BITS_53_TO_52_3_EQ_ETC___d692)
	$write("MINU");
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_mav_request_pa &&
	  NOT_ram_cset_meta_a_read__2_BITS_53_TO_52_3_EQ_ETC___d713)
	$write("MAXU");
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_mav_request_pa &&
	  NOT_ram_cset_meta_a_read__2_BITS_53_TO_52_3_EQ_ETC___d648)
	$write("\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_mav_request_pa &&
	  NOT_ram_cset_meta_a_read__2_BITS_53_TO_52_3_EQ_ETC___d648)
	$display("      va %0h  pa %0h  rs2_val %0h",
		 mav_request_pa_req[202:139],
		 mav_request_pa_pa,
		 mav_request_pa_req[138:75]);
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_mav_request_pa &&
	  NOT_ram_cset_meta_a_read__2_BITS_53_TO_52_3_EQ_ETC___d648)
	$display("      Cache cword %0h, load-result %0h",
		 hit_miss_info_data__h11861,
		 hit_miss_info_data__h11861);
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_mav_request_pa &&
	  NOT_ram_cset_meta_a_read__2_BITS_53_TO_52_3_EQ_ETC___d648)
	$write("      ");
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_mav_request_pa &&
	  NOT_ram_cset_meta_a_read__2_BITS_53_TO_52_3_EQ_ETC___d655)
	$write("LR");
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_mav_request_pa &&
	  NOT_ram_cset_meta_a_read__2_BITS_53_TO_52_3_EQ_ETC___d660)
	$write("SC");
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_mav_request_pa &&
	  NOT_ram_cset_meta_a_read__2_BITS_53_TO_52_3_EQ_ETC___d664)
	$write("ADD");
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_mav_request_pa &&
	  NOT_ram_cset_meta_a_read__2_BITS_53_TO_52_3_EQ_ETC___d668)
	$write("SWAP");
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_mav_request_pa &&
	  NOT_ram_cset_meta_a_read__2_BITS_53_TO_52_3_EQ_ETC___d672)
	$write("XOR");
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_mav_request_pa &&
	  NOT_ram_cset_meta_a_read__2_BITS_53_TO_52_3_EQ_ETC___d676)
	$write("AND");
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_mav_request_pa &&
	  NOT_ram_cset_meta_a_read__2_BITS_53_TO_52_3_EQ_ETC___d680)
	$write("OR");
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_mav_request_pa &&
	  NOT_ram_cset_meta_a_read__2_BITS_53_TO_52_3_EQ_ETC___d684)
	$write("MIN");
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_mav_request_pa &&
	  NOT_ram_cset_meta_a_read__2_BITS_53_TO_52_3_EQ_ETC___d688)
	$write("MAX");
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_mav_request_pa &&
	  NOT_ram_cset_meta_a_read__2_BITS_53_TO_52_3_EQ_ETC___d692)
	$write("MINU");
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_mav_request_pa &&
	  NOT_ram_cset_meta_a_read__2_BITS_53_TO_52_3_EQ_ETC___d713)
	$write("MAXU");
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_mav_request_pa &&
	  NOT_ram_cset_meta_a_read__2_BITS_53_TO_52_3_EQ_ETC___d648)
	$write(" (%0h, %0h) -> %0h",
	       data__h11844,
	       mav_request_pa_req[138:75],
	       new_st_val__h31190,
	       "\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_mav_request_pa &&
	  NOT_ram_cset_meta_a_read__2_BITS_53_TO_52_3_EQ_ETC___d648)
	$display("      cache.fa_write: va_cset_cword_in_cache %0h way %0d pa %0h f3 %0d st_value %0h",
		 rg_va[11:3],
		 ram_cset_meta$DOA[107:106] != 2'd0 &&
		 ram_cset_meta_a_read__2_BITS_105_TO_54_01_EQ_m_ETC___d307,
		 mav_request_pa_pa,
		 mav_request_pa_req[205:203],
		 new_st_val__h31190);
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_mav_request_pa &&
	  NOT_ram_cset_meta_a_read__2_BITS_53_TO_52_3_EQ_ETC___d648)
	$write("      from: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_mav_request_pa &&
	  NOT_ram_cset_meta_a_read__2_BITS_53_TO_52_3_EQ_ETC___d648)
	$write("CSet_CWord {", "%0h", ram_cset_cword$DOA[63:0]);
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_mav_request_pa &&
	  NOT_ram_cset_meta_a_read__2_BITS_53_TO_52_3_EQ_ETC___d648)
	$write(", ");
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_mav_request_pa &&
	  NOT_ram_cset_meta_a_read__2_BITS_53_TO_52_3_EQ_ETC___d648)
	$write("%0h", ram_cset_cword$DOA[127:64]);
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_mav_request_pa &&
	  NOT_ram_cset_meta_a_read__2_BITS_53_TO_52_3_EQ_ETC___d648)
	$write("}");
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_mav_request_pa &&
	  NOT_ram_cset_meta_a_read__2_BITS_53_TO_52_3_EQ_ETC___d648)
	$write("\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_mav_request_pa &&
	  NOT_ram_cset_meta_a_read__2_BITS_53_TO_52_3_EQ_ETC___d648)
	$write("      to:   ");
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_mav_request_pa &&
	  NOT_ram_cset_meta_a_read__2_BITS_53_TO_52_3_EQ_ETC___d648)
	$write("CSet_CWord {",
	       "%0h",
	       IF_ram_cset_meta_a_read__2_BITS_107_TO_106_4_E_ETC___d605);
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_mav_request_pa &&
	  NOT_ram_cset_meta_a_read__2_BITS_53_TO_52_3_EQ_ETC___d648)
	$write(", ");
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_mav_request_pa &&
	  NOT_ram_cset_meta_a_read__2_BITS_53_TO_52_3_EQ_ETC___d648)
	$write("%0h",
	       IF_NOT_ram_cset_meta_a_read__2_BITS_107_TO_106_ETC___d604);
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_mav_request_pa &&
	  NOT_ram_cset_meta_a_read__2_BITS_53_TO_52_3_EQ_ETC___d648)
	$write("}");
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_mav_request_pa &&
	  NOT_ram_cset_meta_a_read__2_BITS_53_TO_52_3_EQ_ETC___d648)
	$write("\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_ma_request_va && NOT_verbosity_ULT_2_6___d17)
	$display("    fa_request_va %0h cset_in_cache %0h, cset_cword_in_cache %0h",
		 ma_request_va_va,
		 ma_request_va_va[11:6],
		 ma_request_va_va[11:3]);
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_ma_request_va && verbosity != 3'd0)
	begin
	  v__h11768 = $stime;
	  #0;
	end
    v__h11762 = v__h11768 / 32'd10;
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_ma_request_va && verbosity != 3'd0)
	$display("%0d: %m.ma_request_va: %0h", v__h11762, ma_request_va_va);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_writeback_loop &&
	  (verbosity != 3'd0 && rg_cword_in_cline == 3'd0 ||
	   NOT_verbosity_ULT_2_6___d17))
	begin
	  v__h1252 = $stime;
	  #0;
	end
    v__h1246 = v__h1252 / 32'd10;
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_writeback_loop &&
	  (verbosity != 3'd0 && rg_cword_in_cline == 3'd0 ||
	   NOT_verbosity_ULT_2_6___d17))
	$display("%0d: %m.rl_writeback_loop [cset %0h way %0h cword %0h] data %0h",
		 v__h1246,
		 rg_cset_in_cache,
		 rg_way_in_cset,
		 rg_cword_in_cline,
		 cword__h1021);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_writeback_loop && rg_cword_in_cline == 3'd7 &&
	  verbosity != 3'd0)
	begin
	  v__h1620 = $stime;
	  #0;
	end
    v__h1614 = v__h1620 / 32'd10;
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_writeback_loop && rg_cword_in_cline == 3'd7 &&
	  verbosity != 3'd0)
	$write("%0d: %m.rl_writeback_loop: done; goto ", v__h1614);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_writeback_loop && rg_cword_in_cline == 3'd7 &&
	  verbosity != 3'd0 &&
	  rg_writeback_sequel == 4'd0)
	$write("FSM_INITIALIZE");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_writeback_loop && rg_cword_in_cline == 3'd7 &&
	  verbosity != 3'd0 &&
	  rg_writeback_sequel == 4'd1)
	$write("FSM_IDLE");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_writeback_loop && rg_cword_in_cline == 3'd7 &&
	  verbosity != 3'd0 &&
	  rg_writeback_sequel == 4'd2)
	$write("FSM_REPLACE_START");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_writeback_loop && rg_cword_in_cline == 3'd7 &&
	  verbosity != 3'd0 &&
	  rg_writeback_sequel == 4'd3)
	$write("FSM_WRITEBACK_LOOP");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_writeback_loop && rg_cword_in_cline == 3'd7 &&
	  verbosity != 3'd0 &&
	  rg_writeback_sequel == 4'd4)
	$write("FSM_REFILL_START");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_writeback_loop && rg_cword_in_cline == 3'd7 &&
	  verbosity != 3'd0 &&
	  rg_writeback_sequel == 4'd5)
	$write("FSM_REFILL_LOOP");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_writeback_loop && rg_cword_in_cline == 3'd7 &&
	  verbosity != 3'd0 &&
	  rg_writeback_sequel == 4'd6)
	$write("FSM_REFILL_FINAL_DELAY");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_writeback_loop && rg_cword_in_cline == 3'd7 &&
	  verbosity != 3'd0 &&
	  rg_writeback_sequel == 4'd7)
	$write("FSM_FLUSH_LOOP");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_writeback_loop &&
	  rg_cword_in_cline_3_EQ_7_2_AND_NOT_verbosity_E_ETC___d67)
	$write("FSM_FLUSH_LOOP_WRITEBACK_SEQUEL");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_writeback_loop && rg_cword_in_cline == 3'd7 &&
	  verbosity != 3'd0)
	$write("\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_writeback_loop && rg_cword_in_cline != 3'd7 &&
	  NOT_verbosity_ULT_2_6___d17)
	$display("    Requested cword_in_cline %0d", cword_in_cline__h1314);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_replace && verbosity != 3'd0)
	begin
	  v__h1766 = $stime;
	  #0;
	end
    v__h1760 = v__h1766 / 32'd10;
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_replace && verbosity != 3'd0)
	$display("%0d: %m.rl_replace", v__h1760);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_replace &&
	  CASE_victim_way818_0_ram_cset_metaDOA_BITS_53_ETC__q9 == 2'd2 &&
	  verbosity != 3'd0)
	$display("    Writeback needed: loop prequel: cset %0h way %0h",
		 rg_va[11:6],
		 victim_way__h1818);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_replace &&
	  CASE_victim_way818_0_ram_cset_metaDOA_BITS_53_ETC__q9 == 2'd2 &&
	  verbosity != 3'd0)
	$display("    fa_cache_writeback_loop_prequel: cset %0h, way %0h",
		 rg_va[11:6],
		 victim_way__h1818);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_replace &&
	  CASE_victim_way818_0_ram_cset_metaDOA_BITS_53_ETC__q9 == 2'd2 &&
	  verbosity != 3'd0)
	$display("    line addr: %0h", wb_cline_pa__h2348);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_replace &&
	  CASE_victim_way818_0_ram_cset_metaDOA_BITS_53_ETC__q9 != 2'd2 &&
	  verbosity != 3'd0)
	$display("    Writeback not needed: start refill: cset %0h way %0h",
		 rg_va[11:6],
		 victim_way__h1818);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_refill_start && verbosity != 3'd0)
	begin
	  v__h2815 = $stime;
	  #0;
	end
    v__h2809 = v__h2815 / 32'd10;
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_refill_start && verbosity != 3'd0)
	$display("%0d: %m.rl_refill_start: cset %0h way %0h",
		 v__h2809,
		 rg_cset_in_cache,
		 rg_way_in_cset);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_refill_start && NOT_verbosity_ULT_2_6___d17)
	$display("    Requesting line at mem addr %0h", x_addr__h3142);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_refill_start && NOT_verbosity_ULT_2_6___d17)
	$display("    Requesting ram_cset_cword.a: cword-in-cache: 0x%0h",
		 cset_cword_in_cache__h8467);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_refill_start && NOT_verbosity_ULT_2_6___d17)
	$display("    goto FSM_REFILL_LOOP");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_refill_loop &&
	  (NOT_verbosity_ULT_2_6___d17 ||
	   verbosity != 3'd0 && rg_cword_in_cline == 3'd0))
	begin
	  v__h3631 = $stime;
	  #0;
	end
    v__h3625 = v__h3631 / 32'd10;
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_refill_loop &&
	  (NOT_verbosity_ULT_2_6___d17 ||
	   verbosity != 3'd0 && rg_cword_in_cline == 3'd0))
	$display("%0d: %m.rl_refill_loop", v__h3625);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_refill_loop &&
	  (NOT_verbosity_ULT_2_6___d17 ||
	   verbosity != 3'd0 && rg_cword_in_cline == 3'd0))
	$display("    set 0x%0h way %0d word %0d",
		 rg_cset_in_cache,
		 rg_way_in_cset,
		 rg_cword_in_cline);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_refill_loop && NOT_verbosity_ULT_2_6___d17)
	$display("    mem rsp: ok %0d data %0h",
		 f_read_data$D_OUT[64],
		 f_read_data$D_OUT[63:0]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_refill_loop && !f_read_data$D_OUT[64] &&
	  NOT_verbosity_ULT_2_6___d17)
	$display("    Fabric ERROR in load-response");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_refill_loop && rg_cword_in_cline == 3'd7 &&
	  verbosity != 3'd0)
	begin
	  v__h4246 = $stime;
	  #0;
	end
    v__h4240 = v__h4246 / 32'd10;
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_refill_loop && rg_cword_in_cline == 3'd7 &&
	  verbosity != 3'd0)
	$display("%0d: %m.rl_refill_loop: done", v__h4240);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_refill_loop && rg_cword_in_cline == 3'd7 &&
	  (!f_read_data$D_OUT[64] || rg_error_during_refill) &&
	  verbosity != 3'd0)
	$display("    Setting meta-data to INVALID (err during refill)");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_refill_loop && rg_cword_in_cline == 3'd7 &&
	  rg_va[5:3] != 3'd7 &&
	  NOT_verbosity_ULT_2_6___d17)
	$display("    fa_request_va %0h cset_in_cache %0h, cset_cword_in_cache %0h",
		 rg_va,
		 rg_va[11:6],
		 rg_va[11:3]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_refill_loop && rg_cword_in_cline != 3'd7 &&
	  NOT_verbosity_ULT_2_6___d17)
	$display("    Requesting ram_cset_cword.a cword-in-cache: 0x%0h",
		 next_cset_cword_in_cache__h4206);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_refill_loop_final && verbosity != 3'd0)
	begin
	  v__h5655 = $stime;
	  #0;
	end
    v__h5649 = v__h5655 / 32'd10;
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_refill_loop_final && verbosity != 3'd0)
	$display("%0d: %m.rl_refill_loop_final; re-request RAM", v__h5649);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_refill_loop_final && NOT_verbosity_ULT_2_6___d17)
	$display("    fa_request_va %0h cset_in_cache %0h, cset_cword_in_cache %0h",
		 rg_va,
		 rg_va[11:6],
		 rg_va[11:3]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_flush_start && verbosity != 3'd0)
	begin
	  v__h6637 = $stime;
	  #0;
	end
    v__h6631 = v__h6637 / 32'd10;
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_flush_start && verbosity != 3'd0)
	$display("%0d: %m.rl_flush_start", v__h6631);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_flush_loop && verbosity != 3'd0)
	begin
	  v__h7160 = $stime;
	  #0;
	end
    v__h7154 = v__h7160 / 32'd10;
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_flush_loop && verbosity != 3'd0)
	$display("%0d: %m.rl_flush_loop: line [cset %0x, way %0d]",
		 v__h7154,
		 rg_cset_in_cache,
		 rg_way_in_cset);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_flush_loop && verbosity != 3'd0)
	$display("    Updating cset_meta:");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_flush_loop && verbosity != 3'd0)
	$write("    Old: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_flush_loop && verbosity != 3'd0)
	$write("CSet[%0h] (state, tag){", rg_cset_in_cache);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_flush_loop && verbosity != 3'd0)
	$write(" way%0d (", $signed(32'd0));
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_flush_loop && verbosity != 3'd0 &&
	  IF_rg_way_in_cset_THEN_rg_new_cset_meta_73_BIT_ETC___d175 == 2'd0)
	$write("INVALID");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_flush_loop && verbosity != 3'd0 &&
	  IF_rg_way_in_cset_THEN_rg_new_cset_meta_73_BIT_ETC___d175 == 2'd1)
	$write("SHARED");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_flush_loop && verbosity != 3'd0 &&
	  IF_rg_way_in_cset_THEN_rg_new_cset_meta_73_BIT_ETC___d175 != 2'd0 &&
	  IF_rg_way_in_cset_THEN_rg_new_cset_meta_73_BIT_ETC___d175 != 2'd1)
	$write("MODIFIED");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_flush_loop && verbosity != 3'd0 &&
	  IF_rg_way_in_cset_THEN_rg_new_cset_meta_73_BIT_ETC___d175 == 2'd0)
	$write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_flush_loop && verbosity != 3'd0 &&
	  IF_rg_way_in_cset_THEN_rg_new_cset_meta_73_BIT_ETC___d175 != 2'd0)
	$write(", ctag %0h", ctag__h7489);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_flush_loop && verbosity != 3'd0) $write(")");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_flush_loop && verbosity != 3'd0)
	$write(" way%0d (", $signed(32'd1));
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_flush_loop && verbosity != 3'd0 &&
	  IF_rg_way_in_cset_THEN_rg_new_cset_meta_73_BIT_ETC___d177 == 2'd0)
	$write("INVALID");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_flush_loop && verbosity != 3'd0 &&
	  IF_rg_way_in_cset_THEN_rg_new_cset_meta_73_BIT_ETC___d177 == 2'd1)
	$write("SHARED");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_flush_loop && verbosity != 3'd0 &&
	  IF_rg_way_in_cset_THEN_rg_new_cset_meta_73_BIT_ETC___d177 != 2'd0 &&
	  IF_rg_way_in_cset_THEN_rg_new_cset_meta_73_BIT_ETC___d177 != 2'd1)
	$write("MODIFIED");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_flush_loop && verbosity != 3'd0 &&
	  IF_rg_way_in_cset_THEN_rg_new_cset_meta_73_BIT_ETC___d177 == 2'd0)
	$write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_flush_loop && verbosity != 3'd0 &&
	  IF_rg_way_in_cset_THEN_rg_new_cset_meta_73_BIT_ETC___d177 != 2'd0)
	$write(", ctag %0h", ctag__h7443);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_flush_loop && verbosity != 3'd0) $write(")");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_flush_loop && verbosity != 3'd0) $write("}");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_flush_loop && verbosity != 3'd0) $write("\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_flush_loop && verbosity != 3'd0)
	$write("    New: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_flush_loop && verbosity != 3'd0)
	$write("CSet[%0h] (state, tag){", rg_cset_in_cache);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_flush_loop && verbosity != 3'd0)
	$write(" way%0d (", $signed(32'd0));
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_flush_loop && verbosity != 3'd0 &&
	  IF_rg_way_in_cset_THEN_IF_rg_way_in_cset_THEN__ETC___d224 == 2'd0)
	$write("INVALID");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_flush_loop && verbosity != 3'd0 &&
	  IF_rg_way_in_cset_THEN_IF_rg_way_in_cset_THEN__ETC___d224 == 2'd1)
	$write("SHARED");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_flush_loop && verbosity != 3'd0 &&
	  IF_rg_way_in_cset_THEN_IF_rg_way_in_cset_THEN__ETC___d224 != 2'd0 &&
	  IF_rg_way_in_cset_THEN_IF_rg_way_in_cset_THEN__ETC___d224 != 2'd1)
	$write("MODIFIED");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_flush_loop && verbosity != 3'd0 &&
	  IF_rg_way_in_cset_THEN_IF_rg_way_in_cset_THEN__ETC___d224 == 2'd0)
	$write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_flush_loop && verbosity != 3'd0 &&
	  IF_rg_way_in_cset_THEN_IF_rg_way_in_cset_THEN__ETC___d224 != 2'd0)
	$write(", ctag %0h",
	       rg_way_in_cset ? ctag__h7489 : new_meta_ctag__h7436);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_flush_loop && verbosity != 3'd0) $write(")");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_flush_loop && verbosity != 3'd0)
	$write(" way%0d (", $signed(32'd1));
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_flush_loop && verbosity != 3'd0 &&
	  IF_rg_way_in_cset_THEN_rg_new_meta_state_92_EL_ETC___d235 == 2'd0)
	$write("INVALID");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_flush_loop && verbosity != 3'd0 &&
	  IF_rg_way_in_cset_THEN_rg_new_meta_state_92_EL_ETC___d235 == 2'd1)
	$write("SHARED");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_flush_loop && verbosity != 3'd0 &&
	  IF_rg_way_in_cset_THEN_rg_new_meta_state_92_EL_ETC___d235 != 2'd0 &&
	  IF_rg_way_in_cset_THEN_rg_new_meta_state_92_EL_ETC___d235 != 2'd1)
	$write("MODIFIED");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_flush_loop && verbosity != 3'd0 &&
	  IF_rg_way_in_cset_THEN_rg_new_meta_state_92_EL_ETC___d235 == 2'd0)
	$write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_flush_loop && verbosity != 3'd0 &&
	  IF_rg_way_in_cset_THEN_rg_new_meta_state_92_EL_ETC___d235 != 2'd0)
	$write(", ctag %0h",
	       rg_way_in_cset ? new_meta_ctag__h7436 : ctag__h7443);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_flush_loop && verbosity != 3'd0) $write(")");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_flush_loop && verbosity != 3'd0) $write("}");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_flush_loop && verbosity != 3'd0) $write("\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_flush_loop &&
	  SEL_ARR_IF_rg_way_in_cset_THEN_rg_new_cset_met_ETC___d179 == 2'd2 &&
	  NOT_verbosity_ULT_2_6___d17)
	$display("    MODIFIED; writeback");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_flush_loop &&
	  SEL_ARR_IF_rg_way_in_cset_THEN_rg_new_cset_met_ETC___d179 == 2'd2 &&
	  NOT_verbosity_ULT_2_6___d17)
	begin
	  v__h8135 = $stime;
	  #0;
	end
    v__h8129 = v__h8135 / 32'd10;
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_flush_loop &&
	  SEL_ARR_IF_rg_way_in_cset_THEN_rg_new_cset_met_ETC___d179 == 2'd2 &&
	  NOT_verbosity_ULT_2_6___d17)
	$display("%0d: %m.rl_flush_loop: writeback line [cset %0x, way %0d]",
		 v__h8129,
		 rg_cset_in_cache,
		 rg_way_in_cset);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_flush_loop &&
	  SEL_ARR_IF_rg_way_in_cset_THEN_rg_new_cset_met_ETC___d179 == 2'd2 &&
	  verbosity != 3'd0)
	$display("    fa_cache_writeback_loop_prequel: cset %0h, way %0h",
		 rg_cset_in_cache,
		 rg_way_in_cset);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_flush_loop &&
	  SEL_ARR_IF_rg_way_in_cset_THEN_rg_new_cset_met_ETC___d179 == 2'd2 &&
	  verbosity != 3'd0)
	$display("    line addr: %0h", wb_cline_pa__h8360);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_flush_loop &&
	  SEL_ARR_IF_rg_way_in_cset_THEN_rg_new_cset_met_ETC___d179 != 2'd2 &&
	  NOT_verbosity_ULT_2_6___d17)
	$write("    Line cstate: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_flush_loop && NOT_verbosity_ULT_2_6___d17 &&
	  SEL_ARR_IF_rg_way_in_cset_THEN_rg_new_cset_met_ETC___d179 == 2'd0)
	$write("INVALID");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_flush_loop && NOT_verbosity_ULT_2_6___d17 &&
	  SEL_ARR_IF_rg_way_in_cset_THEN_rg_new_cset_met_ETC___d179 == 2'd1)
	$write("SHARED");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_flush_loop &&
	  SEL_ARR_IF_rg_way_in_cset_THEN_rg_new_cset_met_ETC___d179 != 2'd2 &&
	  NOT_verbosity_ULT_2_6___d17 &&
	  SEL_ARR_IF_rg_way_in_cset_THEN_rg_new_cset_met_ETC___d179 != 2'd0 &&
	  SEL_ARR_IF_rg_way_in_cset_THEN_rg_new_cset_met_ETC___d179 != 2'd1)
	$write("MODIFIED");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_flush_loop &&
	  SEL_ARR_IF_rg_way_in_cset_THEN_rg_new_cset_met_ETC___d179 != 2'd2 &&
	  NOT_verbosity_ULT_2_6___d17)
	$write("\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_flush_loop &&
	  NOT_SEL_ARR_IF_rg_way_in_cset_THEN_rg_new_cset_ETC___d270)
	begin
	  v__h9131 = $stime;
	  #0;
	end
    v__h9125 = v__h9131 / 32'd10;
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_flush_loop &&
	  NOT_SEL_ARR_IF_rg_way_in_cset_THEN_rg_new_cset_ETC___d270)
	$display("%0d: %m.rl_flush_loop: done; goto IDLE", v__h9125);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_flush_loop_writeback_sequel &&
	  rg_cset_in_cache == 6'd63 &&
	  rg_way_in_cset &&
	  NOT_verbosity_ULT_2_6___d17)
	$display("    fa_request_va %0h cset_in_cache %0h, cset_cword_in_cache %0h",
		 rg_va,
		 rg_va[11:6],
		 rg_va[11:3]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_flush_loop_writeback_sequel &&
	  rg_cset_in_cache == 6'd63 &&
	  rg_way_in_cset &&
	  verbosity != 3'd0)
	begin
	  v__h10431 = $stime;
	  #0;
	end
    v__h10425 = v__h10431 / 32'd10;
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_flush_loop_writeback_sequel &&
	  rg_cset_in_cache == 6'd63 &&
	  rg_way_in_cset &&
	  verbosity != 3'd0)
	$display("%0d: %m.rl_flush_writeback_sequel; flush loop done; goto IDLE",
		 v__h10425);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_flush_loop_writeback_sequel &&
	  (rg_cset_in_cache != 6'd63 || !rg_way_in_cset) &&
	  verbosity != 3'd0)
	begin
	  v__h10501 = $stime;
	  #0;
	end
    v__h10495 = v__h10501 / 32'd10;
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_flush_loop_writeback_sequel &&
	  (rg_cset_in_cache != 6'd63 || !rg_way_in_cset) &&
	  verbosity != 3'd0)
	$display("%0d: %m.rl_flush_writeback_sequel; continue", v__h10495);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_initialize && rg_cset_in_cache == 6'd63)
	begin
	  v__h10863 = $stime;
	  #0;
	end
    v__h10857 = v__h10863 / 32'd10;
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_initialize && rg_cset_in_cache == 6'd63)
	$display("%0d: INFO: %m.rl_initialize", v__h10857);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_initialize && rg_cset_in_cache == 6'd63)
	$display("    Size %0d KB, Associativity %0d, Line size %0d bytes (= %0d XLEN words)",
		 $signed(32'd8),
		 $signed(32'd2),
		 $signed(32'd64),
		 $signed(32'd8));
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_initialize && rg_cset_in_cache == 6'd63 &&
	  verbosity != 3'd0)
	begin
	  v__h10963 = $stime;
	  #0;
	end
    v__h10957 = v__h10963 / 32'd10;
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_initialize && rg_cset_in_cache == 6'd63 &&
	  verbosity != 3'd0)
	$display("    All lines (%0d sets %0d ways) initialized to INVALID",
		 v__h10957,
		 $signed(32'd64),
		 $signed(32'd2));
  end
  // synopsys translate_on
endmodule  // mkCache

